package com.spring.model1;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class QcTalkcheckprocesstabExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public QcTalkcheckprocesstabExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTenantidIsNull() {
            addCriterion("TENANTID is null");
            return (Criteria) this;
        }

        public Criteria andTenantidIsNotNull() {
            addCriterion("TENANTID is not null");
            return (Criteria) this;
        }

        public Criteria andTenantidEqualTo(String value) {
            addCriterion("TENANTID =", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotEqualTo(String value) {
            addCriterion("TENANTID <>", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidGreaterThan(String value) {
            addCriterion("TENANTID >", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidGreaterThanOrEqualTo(String value) {
            addCriterion("TENANTID >=", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidLessThan(String value) {
            addCriterion("TENANTID <", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidLessThanOrEqualTo(String value) {
            addCriterion("TENANTID <=", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidLike(String value) {
            addCriterion("TENANTID like", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotLike(String value) {
            addCriterion("TENANTID not like", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidIn(List<String> values) {
            addCriterion("TENANTID in", values, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotIn(List<String> values) {
            addCriterion("TENANTID not in", values, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidBetween(String value1, String value2) {
            addCriterion("TENANTID between", value1, value2, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotBetween(String value1, String value2) {
            addCriterion("TENANTID not between", value1, value2, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTcpidIsNull() {
            addCriterion("TCPID is null");
            return (Criteria) this;
        }

        public Criteria andTcpidIsNotNull() {
            addCriterion("TCPID is not null");
            return (Criteria) this;
        }

        public Criteria andTcpidEqualTo(Long value) {
            addCriterion("TCPID =", value, "tcpid");
            return (Criteria) this;
        }

        public Criteria andTcpidNotEqualTo(Long value) {
            addCriterion("TCPID <>", value, "tcpid");
            return (Criteria) this;
        }

        public Criteria andTcpidGreaterThan(Long value) {
            addCriterion("TCPID >", value, "tcpid");
            return (Criteria) this;
        }

        public Criteria andTcpidGreaterThanOrEqualTo(Long value) {
            addCriterion("TCPID >=", value, "tcpid");
            return (Criteria) this;
        }

        public Criteria andTcpidLessThan(Long value) {
            addCriterion("TCPID <", value, "tcpid");
            return (Criteria) this;
        }

        public Criteria andTcpidLessThanOrEqualTo(Long value) {
            addCriterion("TCPID <=", value, "tcpid");
            return (Criteria) this;
        }

        public Criteria andTcpidIn(List<Long> values) {
            addCriterion("TCPID in", values, "tcpid");
            return (Criteria) this;
        }

        public Criteria andTcpidNotIn(List<Long> values) {
            addCriterion("TCPID not in", values, "tcpid");
            return (Criteria) this;
        }

        public Criteria andTcpidBetween(Long value1, Long value2) {
            addCriterion("TCPID between", value1, value2, "tcpid");
            return (Criteria) this;
        }

        public Criteria andTcpidNotBetween(Long value1, Long value2) {
            addCriterion("TCPID not between", value1, value2, "tcpid");
            return (Criteria) this;
        }

        public Criteria andCsidIsNull() {
            addCriterion("CSID is null");
            return (Criteria) this;
        }

        public Criteria andCsidIsNotNull() {
            addCriterion("CSID is not null");
            return (Criteria) this;
        }

        public Criteria andCsidEqualTo(Long value) {
            addCriterion("CSID =", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidNotEqualTo(Long value) {
            addCriterion("CSID <>", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidGreaterThan(Long value) {
            addCriterion("CSID >", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidGreaterThanOrEqualTo(Long value) {
            addCriterion("CSID >=", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidLessThan(Long value) {
            addCriterion("CSID <", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidLessThanOrEqualTo(Long value) {
            addCriterion("CSID <=", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidIn(List<Long> values) {
            addCriterion("CSID in", values, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidNotIn(List<Long> values) {
            addCriterion("CSID not in", values, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidBetween(Long value1, Long value2) {
            addCriterion("CSID between", value1, value2, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidNotBetween(Long value1, Long value2) {
            addCriterion("CSID not between", value1, value2, "csid");
            return (Criteria) this;
        }

        public Criteria andAuthoridIsNull() {
            addCriterion("AUTHORID is null");
            return (Criteria) this;
        }

        public Criteria andAuthoridIsNotNull() {
            addCriterion("AUTHORID is not null");
            return (Criteria) this;
        }

        public Criteria andAuthoridEqualTo(Long value) {
            addCriterion("AUTHORID =", value, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthoridNotEqualTo(Long value) {
            addCriterion("AUTHORID <>", value, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthoridGreaterThan(Long value) {
            addCriterion("AUTHORID >", value, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthoridGreaterThanOrEqualTo(Long value) {
            addCriterion("AUTHORID >=", value, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthoridLessThan(Long value) {
            addCriterion("AUTHORID <", value, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthoridLessThanOrEqualTo(Long value) {
            addCriterion("AUTHORID <=", value, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthoridIn(List<Long> values) {
            addCriterion("AUTHORID in", values, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthoridNotIn(List<Long> values) {
            addCriterion("AUTHORID not in", values, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthoridBetween(Long value1, Long value2) {
            addCriterion("AUTHORID between", value1, value2, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthoridNotBetween(Long value1, Long value2) {
            addCriterion("AUTHORID not between", value1, value2, "authorid");
            return (Criteria) this;
        }

        public Criteria andAuthornameIsNull() {
            addCriterion("AUTHORNAME is null");
            return (Criteria) this;
        }

        public Criteria andAuthornameIsNotNull() {
            addCriterion("AUTHORNAME is not null");
            return (Criteria) this;
        }

        public Criteria andAuthornameEqualTo(Object value) {
            addCriterion("AUTHORNAME =", value, "authorname");
            return (Criteria) this;
        }

        public Criteria andAuthornameNotEqualTo(Object value) {
            addCriterion("AUTHORNAME <>", value, "authorname");
            return (Criteria) this;
        }

        public Criteria andAuthornameGreaterThan(Object value) {
            addCriterion("AUTHORNAME >", value, "authorname");
            return (Criteria) this;
        }

        public Criteria andAuthornameGreaterThanOrEqualTo(Object value) {
            addCriterion("AUTHORNAME >=", value, "authorname");
            return (Criteria) this;
        }

        public Criteria andAuthornameLessThan(Object value) {
            addCriterion("AUTHORNAME <", value, "authorname");
            return (Criteria) this;
        }

        public Criteria andAuthornameLessThanOrEqualTo(Object value) {
            addCriterion("AUTHORNAME <=", value, "authorname");
            return (Criteria) this;
        }

        public Criteria andAuthornameIn(List<Object> values) {
            addCriterion("AUTHORNAME in", values, "authorname");
            return (Criteria) this;
        }

        public Criteria andAuthornameNotIn(List<Object> values) {
            addCriterion("AUTHORNAME not in", values, "authorname");
            return (Criteria) this;
        }

        public Criteria andAuthornameBetween(Object value1, Object value2) {
            addCriterion("AUTHORNAME between", value1, value2, "authorname");
            return (Criteria) this;
        }

        public Criteria andAuthornameNotBetween(Object value1, Object value2) {
            addCriterion("AUTHORNAME not between", value1, value2, "authorname");
            return (Criteria) this;
        }

        public Criteria andProcesstimeIsNull() {
            addCriterion("PROCESSTIME is null");
            return (Criteria) this;
        }

        public Criteria andProcesstimeIsNotNull() {
            addCriterion("PROCESSTIME is not null");
            return (Criteria) this;
        }

        public Criteria andProcesstimeEqualTo(Date value) {
            addCriterion("PROCESSTIME =", value, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstimeNotEqualTo(Date value) {
            addCriterion("PROCESSTIME <>", value, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstimeGreaterThan(Date value) {
            addCriterion("PROCESSTIME >", value, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstimeGreaterThanOrEqualTo(Date value) {
            addCriterion("PROCESSTIME >=", value, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstimeLessThan(Date value) {
            addCriterion("PROCESSTIME <", value, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstimeLessThanOrEqualTo(Date value) {
            addCriterion("PROCESSTIME <=", value, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstimeIn(List<Date> values) {
            addCriterion("PROCESSTIME in", values, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstimeNotIn(List<Date> values) {
            addCriterion("PROCESSTIME not in", values, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstimeBetween(Date value1, Date value2) {
            addCriterion("PROCESSTIME between", value1, value2, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstimeNotBetween(Date value1, Date value2) {
            addCriterion("PROCESSTIME not between", value1, value2, "processtime");
            return (Criteria) this;
        }

        public Criteria andProcesstextIsNull() {
            addCriterion("PROCESSTEXT is null");
            return (Criteria) this;
        }

        public Criteria andProcesstextIsNotNull() {
            addCriterion("PROCESSTEXT is not null");
            return (Criteria) this;
        }

        public Criteria andProcesstextEqualTo(Object value) {
            addCriterion("PROCESSTEXT =", value, "processtext");
            return (Criteria) this;
        }

        public Criteria andProcesstextNotEqualTo(Object value) {
            addCriterion("PROCESSTEXT <>", value, "processtext");
            return (Criteria) this;
        }

        public Criteria andProcesstextGreaterThan(Object value) {
            addCriterion("PROCESSTEXT >", value, "processtext");
            return (Criteria) this;
        }

        public Criteria andProcesstextGreaterThanOrEqualTo(Object value) {
            addCriterion("PROCESSTEXT >=", value, "processtext");
            return (Criteria) this;
        }

        public Criteria andProcesstextLessThan(Object value) {
            addCriterion("PROCESSTEXT <", value, "processtext");
            return (Criteria) this;
        }

        public Criteria andProcesstextLessThanOrEqualTo(Object value) {
            addCriterion("PROCESSTEXT <=", value, "processtext");
            return (Criteria) this;
        }

        public Criteria andProcesstextIn(List<Object> values) {
            addCriterion("PROCESSTEXT in", values, "processtext");
            return (Criteria) this;
        }

        public Criteria andProcesstextNotIn(List<Object> values) {
            addCriterion("PROCESSTEXT not in", values, "processtext");
            return (Criteria) this;
        }

        public Criteria andProcesstextBetween(Object value1, Object value2) {
            addCriterion("PROCESSTEXT between", value1, value2, "processtext");
            return (Criteria) this;
        }

        public Criteria andProcesstextNotBetween(Object value1, Object value2) {
            addCriterion("PROCESSTEXT not between", value1, value2, "processtext");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated do_not_delete_during_merge Tue Jan 08 16:40:10 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.QC_TALKCHECKPROCESSTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}