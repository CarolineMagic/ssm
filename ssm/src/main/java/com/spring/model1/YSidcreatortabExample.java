package com.spring.model1;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class YSidcreatortabExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public YSidcreatortabExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andCatagoryIsNull() {
            addCriterion("CATAGORY is null");
            return (Criteria) this;
        }

        public Criteria andCatagoryIsNotNull() {
            addCriterion("CATAGORY is not null");
            return (Criteria) this;
        }

        public Criteria andCatagoryEqualTo(String value) {
            addCriterion("CATAGORY =", value, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryNotEqualTo(String value) {
            addCriterion("CATAGORY <>", value, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryGreaterThan(String value) {
            addCriterion("CATAGORY >", value, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryGreaterThanOrEqualTo(String value) {
            addCriterion("CATAGORY >=", value, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryLessThan(String value) {
            addCriterion("CATAGORY <", value, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryLessThanOrEqualTo(String value) {
            addCriterion("CATAGORY <=", value, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryLike(String value) {
            addCriterion("CATAGORY like", value, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryNotLike(String value) {
            addCriterion("CATAGORY not like", value, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryIn(List<String> values) {
            addCriterion("CATAGORY in", values, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryNotIn(List<String> values) {
            addCriterion("CATAGORY not in", values, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryBetween(String value1, String value2) {
            addCriterion("CATAGORY between", value1, value2, "catagory");
            return (Criteria) this;
        }

        public Criteria andCatagoryNotBetween(String value1, String value2) {
            addCriterion("CATAGORY not between", value1, value2, "catagory");
            return (Criteria) this;
        }

        public Criteria andBasevalIsNull() {
            addCriterion("BASEVAL is null");
            return (Criteria) this;
        }

        public Criteria andBasevalIsNotNull() {
            addCriterion("BASEVAL is not null");
            return (Criteria) this;
        }

        public Criteria andBasevalEqualTo(Long value) {
            addCriterion("BASEVAL =", value, "baseval");
            return (Criteria) this;
        }

        public Criteria andBasevalNotEqualTo(Long value) {
            addCriterion("BASEVAL <>", value, "baseval");
            return (Criteria) this;
        }

        public Criteria andBasevalGreaterThan(Long value) {
            addCriterion("BASEVAL >", value, "baseval");
            return (Criteria) this;
        }

        public Criteria andBasevalGreaterThanOrEqualTo(Long value) {
            addCriterion("BASEVAL >=", value, "baseval");
            return (Criteria) this;
        }

        public Criteria andBasevalLessThan(Long value) {
            addCriterion("BASEVAL <", value, "baseval");
            return (Criteria) this;
        }

        public Criteria andBasevalLessThanOrEqualTo(Long value) {
            addCriterion("BASEVAL <=", value, "baseval");
            return (Criteria) this;
        }

        public Criteria andBasevalIn(List<Long> values) {
            addCriterion("BASEVAL in", values, "baseval");
            return (Criteria) this;
        }

        public Criteria andBasevalNotIn(List<Long> values) {
            addCriterion("BASEVAL not in", values, "baseval");
            return (Criteria) this;
        }

        public Criteria andBasevalBetween(Long value1, Long value2) {
            addCriterion("BASEVAL between", value1, value2, "baseval");
            return (Criteria) this;
        }

        public Criteria andBasevalNotBetween(Long value1, Long value2) {
            addCriterion("BASEVAL not between", value1, value2, "baseval");
            return (Criteria) this;
        }

        public Criteria andStepvalIsNull() {
            addCriterion("STEPVAL is null");
            return (Criteria) this;
        }

        public Criteria andStepvalIsNotNull() {
            addCriterion("STEPVAL is not null");
            return (Criteria) this;
        }

        public Criteria andStepvalEqualTo(Integer value) {
            addCriterion("STEPVAL =", value, "stepval");
            return (Criteria) this;
        }

        public Criteria andStepvalNotEqualTo(Integer value) {
            addCriterion("STEPVAL <>", value, "stepval");
            return (Criteria) this;
        }

        public Criteria andStepvalGreaterThan(Integer value) {
            addCriterion("STEPVAL >", value, "stepval");
            return (Criteria) this;
        }

        public Criteria andStepvalGreaterThanOrEqualTo(Integer value) {
            addCriterion("STEPVAL >=", value, "stepval");
            return (Criteria) this;
        }

        public Criteria andStepvalLessThan(Integer value) {
            addCriterion("STEPVAL <", value, "stepval");
            return (Criteria) this;
        }

        public Criteria andStepvalLessThanOrEqualTo(Integer value) {
            addCriterion("STEPVAL <=", value, "stepval");
            return (Criteria) this;
        }

        public Criteria andStepvalIn(List<Integer> values) {
            addCriterion("STEPVAL in", values, "stepval");
            return (Criteria) this;
        }

        public Criteria andStepvalNotIn(List<Integer> values) {
            addCriterion("STEPVAL not in", values, "stepval");
            return (Criteria) this;
        }

        public Criteria andStepvalBetween(Integer value1, Integer value2) {
            addCriterion("STEPVAL between", value1, value2, "stepval");
            return (Criteria) this;
        }

        public Criteria andStepvalNotBetween(Integer value1, Integer value2) {
            addCriterion("STEPVAL not between", value1, value2, "stepval");
            return (Criteria) this;
        }

        public Criteria andCurrvalIsNull() {
            addCriterion("CURRVAL is null");
            return (Criteria) this;
        }

        public Criteria andCurrvalIsNotNull() {
            addCriterion("CURRVAL is not null");
            return (Criteria) this;
        }

        public Criteria andCurrvalEqualTo(Long value) {
            addCriterion("CURRVAL =", value, "currval");
            return (Criteria) this;
        }

        public Criteria andCurrvalNotEqualTo(Long value) {
            addCriterion("CURRVAL <>", value, "currval");
            return (Criteria) this;
        }

        public Criteria andCurrvalGreaterThan(Long value) {
            addCriterion("CURRVAL >", value, "currval");
            return (Criteria) this;
        }

        public Criteria andCurrvalGreaterThanOrEqualTo(Long value) {
            addCriterion("CURRVAL >=", value, "currval");
            return (Criteria) this;
        }

        public Criteria andCurrvalLessThan(Long value) {
            addCriterion("CURRVAL <", value, "currval");
            return (Criteria) this;
        }

        public Criteria andCurrvalLessThanOrEqualTo(Long value) {
            addCriterion("CURRVAL <=", value, "currval");
            return (Criteria) this;
        }

        public Criteria andCurrvalIn(List<Long> values) {
            addCriterion("CURRVAL in", values, "currval");
            return (Criteria) this;
        }

        public Criteria andCurrvalNotIn(List<Long> values) {
            addCriterion("CURRVAL not in", values, "currval");
            return (Criteria) this;
        }

        public Criteria andCurrvalBetween(Long value1, Long value2) {
            addCriterion("CURRVAL between", value1, value2, "currval");
            return (Criteria) this;
        }

        public Criteria andCurrvalNotBetween(Long value1, Long value2) {
            addCriterion("CURRVAL not between", value1, value2, "currval");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeIsNull() {
            addCriterion("LASTCHANGETIME is null");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeIsNotNull() {
            addCriterion("LASTCHANGETIME is not null");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeEqualTo(Date value) {
            addCriterion("LASTCHANGETIME =", value, "lastchangetime");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeNotEqualTo(Date value) {
            addCriterion("LASTCHANGETIME <>", value, "lastchangetime");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeGreaterThan(Date value) {
            addCriterion("LASTCHANGETIME >", value, "lastchangetime");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("LASTCHANGETIME >=", value, "lastchangetime");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeLessThan(Date value) {
            addCriterion("LASTCHANGETIME <", value, "lastchangetime");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeLessThanOrEqualTo(Date value) {
            addCriterion("LASTCHANGETIME <=", value, "lastchangetime");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeIn(List<Date> values) {
            addCriterion("LASTCHANGETIME in", values, "lastchangetime");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeNotIn(List<Date> values) {
            addCriterion("LASTCHANGETIME not in", values, "lastchangetime");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeBetween(Date value1, Date value2) {
            addCriterion("LASTCHANGETIME between", value1, value2, "lastchangetime");
            return (Criteria) this;
        }

        public Criteria andLastchangetimeNotBetween(Date value1, Date value2) {
            addCriterion("LASTCHANGETIME not between", value1, value2, "lastchangetime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated do_not_delete_during_merge Tue Jan 08 16:40:09 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.Y_SIDCREATORTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}