package com.spring.model1;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;

public class QcTalkattrchecktabExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public QcTalkattrchecktabExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTenantidIsNull() {
            addCriterion("TENANTID is null");
            return (Criteria) this;
        }

        public Criteria andTenantidIsNotNull() {
            addCriterion("TENANTID is not null");
            return (Criteria) this;
        }

        public Criteria andTenantidEqualTo(String value) {
            addCriterion("TENANTID =", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotEqualTo(String value) {
            addCriterion("TENANTID <>", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidGreaterThan(String value) {
            addCriterion("TENANTID >", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidGreaterThanOrEqualTo(String value) {
            addCriterion("TENANTID >=", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidLessThan(String value) {
            addCriterion("TENANTID <", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidLessThanOrEqualTo(String value) {
            addCriterion("TENANTID <=", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidLike(String value) {
            addCriterion("TENANTID like", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotLike(String value) {
            addCriterion("TENANTID not like", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidIn(List<String> values) {
            addCriterion("TENANTID in", values, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotIn(List<String> values) {
            addCriterion("TENANTID not in", values, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidBetween(String value1, String value2) {
            addCriterion("TENANTID between", value1, value2, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotBetween(String value1, String value2) {
            addCriterion("TENANTID not between", value1, value2, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTacidIsNull() {
            addCriterion("TACID is null");
            return (Criteria) this;
        }

        public Criteria andTacidIsNotNull() {
            addCriterion("TACID is not null");
            return (Criteria) this;
        }

        public Criteria andTacidEqualTo(Long value) {
            addCriterion("TACID =", value, "tacid");
            return (Criteria) this;
        }

        public Criteria andTacidNotEqualTo(Long value) {
            addCriterion("TACID <>", value, "tacid");
            return (Criteria) this;
        }

        public Criteria andTacidGreaterThan(Long value) {
            addCriterion("TACID >", value, "tacid");
            return (Criteria) this;
        }

        public Criteria andTacidGreaterThanOrEqualTo(Long value) {
            addCriterion("TACID >=", value, "tacid");
            return (Criteria) this;
        }

        public Criteria andTacidLessThan(Long value) {
            addCriterion("TACID <", value, "tacid");
            return (Criteria) this;
        }

        public Criteria andTacidLessThanOrEqualTo(Long value) {
            addCriterion("TACID <=", value, "tacid");
            return (Criteria) this;
        }

        public Criteria andTacidIn(List<Long> values) {
            addCriterion("TACID in", values, "tacid");
            return (Criteria) this;
        }

        public Criteria andTacidNotIn(List<Long> values) {
            addCriterion("TACID not in", values, "tacid");
            return (Criteria) this;
        }

        public Criteria andTacidBetween(Long value1, Long value2) {
            addCriterion("TACID between", value1, value2, "tacid");
            return (Criteria) this;
        }

        public Criteria andTacidNotBetween(Long value1, Long value2) {
            addCriterion("TACID not between", value1, value2, "tacid");
            return (Criteria) this;
        }

        public Criteria andCsidIsNull() {
            addCriterion("CSID is null");
            return (Criteria) this;
        }

        public Criteria andCsidIsNotNull() {
            addCriterion("CSID is not null");
            return (Criteria) this;
        }

        public Criteria andCsidEqualTo(Long value) {
            addCriterion("CSID =", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidNotEqualTo(Long value) {
            addCriterion("CSID <>", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidGreaterThan(Long value) {
            addCriterion("CSID >", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidGreaterThanOrEqualTo(Long value) {
            addCriterion("CSID >=", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidLessThan(Long value) {
            addCriterion("CSID <", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidLessThanOrEqualTo(Long value) {
            addCriterion("CSID <=", value, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidIn(List<Long> values) {
            addCriterion("CSID in", values, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidNotIn(List<Long> values) {
            addCriterion("CSID not in", values, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidBetween(Long value1, Long value2) {
            addCriterion("CSID between", value1, value2, "csid");
            return (Criteria) this;
        }

        public Criteria andCsidNotBetween(Long value1, Long value2) {
            addCriterion("CSID not between", value1, value2, "csid");
            return (Criteria) this;
        }

        public Criteria andTtidIsNull() {
            addCriterion("TTID is null");
            return (Criteria) this;
        }

        public Criteria andTtidIsNotNull() {
            addCriterion("TTID is not null");
            return (Criteria) this;
        }

        public Criteria andTtidEqualTo(Long value) {
            addCriterion("TTID =", value, "ttid");
            return (Criteria) this;
        }

        public Criteria andTtidNotEqualTo(Long value) {
            addCriterion("TTID <>", value, "ttid");
            return (Criteria) this;
        }

        public Criteria andTtidGreaterThan(Long value) {
            addCriterion("TTID >", value, "ttid");
            return (Criteria) this;
        }

        public Criteria andTtidGreaterThanOrEqualTo(Long value) {
            addCriterion("TTID >=", value, "ttid");
            return (Criteria) this;
        }

        public Criteria andTtidLessThan(Long value) {
            addCriterion("TTID <", value, "ttid");
            return (Criteria) this;
        }

        public Criteria andTtidLessThanOrEqualTo(Long value) {
            addCriterion("TTID <=", value, "ttid");
            return (Criteria) this;
        }

        public Criteria andTtidIn(List<Long> values) {
            addCriterion("TTID in", values, "ttid");
            return (Criteria) this;
        }

        public Criteria andTtidNotIn(List<Long> values) {
            addCriterion("TTID not in", values, "ttid");
            return (Criteria) this;
        }

        public Criteria andTtidBetween(Long value1, Long value2) {
            addCriterion("TTID between", value1, value2, "ttid");
            return (Criteria) this;
        }

        public Criteria andTtidNotBetween(Long value1, Long value2) {
            addCriterion("TTID not between", value1, value2, "ttid");
            return (Criteria) this;
        }

        public Criteria andAttrtypeIsNull() {
            addCriterion("ATTRTYPE is null");
            return (Criteria) this;
        }

        public Criteria andAttrtypeIsNotNull() {
            addCriterion("ATTRTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andAttrtypeEqualTo(String value) {
            addCriterion("ATTRTYPE =", value, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeNotEqualTo(String value) {
            addCriterion("ATTRTYPE <>", value, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeGreaterThan(String value) {
            addCriterion("ATTRTYPE >", value, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeGreaterThanOrEqualTo(String value) {
            addCriterion("ATTRTYPE >=", value, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeLessThan(String value) {
            addCriterion("ATTRTYPE <", value, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeLessThanOrEqualTo(String value) {
            addCriterion("ATTRTYPE <=", value, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeLike(String value) {
            addCriterion("ATTRTYPE like", value, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeNotLike(String value) {
            addCriterion("ATTRTYPE not like", value, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeIn(List<String> values) {
            addCriterion("ATTRTYPE in", values, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeNotIn(List<String> values) {
            addCriterion("ATTRTYPE not in", values, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeBetween(String value1, String value2) {
            addCriterion("ATTRTYPE between", value1, value2, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrtypeNotBetween(String value1, String value2) {
            addCriterion("ATTRTYPE not between", value1, value2, "attrtype");
            return (Criteria) this;
        }

        public Criteria andAttrvalIsNull() {
            addCriterion("ATTRVAL is null");
            return (Criteria) this;
        }

        public Criteria andAttrvalIsNotNull() {
            addCriterion("ATTRVAL is not null");
            return (Criteria) this;
        }

        public Criteria andAttrvalEqualTo(BigDecimal value) {
            addCriterion("ATTRVAL =", value, "attrval");
            return (Criteria) this;
        }

        public Criteria andAttrvalNotEqualTo(BigDecimal value) {
            addCriterion("ATTRVAL <>", value, "attrval");
            return (Criteria) this;
        }

        public Criteria andAttrvalGreaterThan(BigDecimal value) {
            addCriterion("ATTRVAL >", value, "attrval");
            return (Criteria) this;
        }

        public Criteria andAttrvalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("ATTRVAL >=", value, "attrval");
            return (Criteria) this;
        }

        public Criteria andAttrvalLessThan(BigDecimal value) {
            addCriterion("ATTRVAL <", value, "attrval");
            return (Criteria) this;
        }

        public Criteria andAttrvalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("ATTRVAL <=", value, "attrval");
            return (Criteria) this;
        }

        public Criteria andAttrvalIn(List<BigDecimal> values) {
            addCriterion("ATTRVAL in", values, "attrval");
            return (Criteria) this;
        }

        public Criteria andAttrvalNotIn(List<BigDecimal> values) {
            addCriterion("ATTRVAL not in", values, "attrval");
            return (Criteria) this;
        }

        public Criteria andAttrvalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ATTRVAL between", value1, value2, "attrval");
            return (Criteria) this;
        }

        public Criteria andAttrvalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("ATTRVAL not between", value1, value2, "attrval");
            return (Criteria) this;
        }

        public Criteria andThrosvalIsNull() {
            addCriterion("THROSVAL is null");
            return (Criteria) this;
        }

        public Criteria andThrosvalIsNotNull() {
            addCriterion("THROSVAL is not null");
            return (Criteria) this;
        }

        public Criteria andThrosvalEqualTo(BigDecimal value) {
            addCriterion("THROSVAL =", value, "throsval");
            return (Criteria) this;
        }

        public Criteria andThrosvalNotEqualTo(BigDecimal value) {
            addCriterion("THROSVAL <>", value, "throsval");
            return (Criteria) this;
        }

        public Criteria andThrosvalGreaterThan(BigDecimal value) {
            addCriterion("THROSVAL >", value, "throsval");
            return (Criteria) this;
        }

        public Criteria andThrosvalGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("THROSVAL >=", value, "throsval");
            return (Criteria) this;
        }

        public Criteria andThrosvalLessThan(BigDecimal value) {
            addCriterion("THROSVAL <", value, "throsval");
            return (Criteria) this;
        }

        public Criteria andThrosvalLessThanOrEqualTo(BigDecimal value) {
            addCriterion("THROSVAL <=", value, "throsval");
            return (Criteria) this;
        }

        public Criteria andThrosvalIn(List<BigDecimal> values) {
            addCriterion("THROSVAL in", values, "throsval");
            return (Criteria) this;
        }

        public Criteria andThrosvalNotIn(List<BigDecimal> values) {
            addCriterion("THROSVAL not in", values, "throsval");
            return (Criteria) this;
        }

        public Criteria andThrosvalBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("THROSVAL between", value1, value2, "throsval");
            return (Criteria) this;
        }

        public Criteria andThrosvalNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("THROSVAL not between", value1, value2, "throsval");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated do_not_delete_during_merge Tue Jan 08 16:40:10 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.QC_TALKATTRCHECKTAB
     *
     * @mbg.generated Tue Jan 08 16:40:10 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}