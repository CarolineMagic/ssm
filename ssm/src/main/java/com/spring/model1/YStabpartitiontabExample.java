package com.spring.model1;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class YStabpartitiontabExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public YStabpartitiontabExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andTenantidIsNull() {
            addCriterion("TENANTID is null");
            return (Criteria) this;
        }

        public Criteria andTenantidIsNotNull() {
            addCriterion("TENANTID is not null");
            return (Criteria) this;
        }

        public Criteria andTenantidEqualTo(String value) {
            addCriterion("TENANTID =", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotEqualTo(String value) {
            addCriterion("TENANTID <>", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidGreaterThan(String value) {
            addCriterion("TENANTID >", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidGreaterThanOrEqualTo(String value) {
            addCriterion("TENANTID >=", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidLessThan(String value) {
            addCriterion("TENANTID <", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidLessThanOrEqualTo(String value) {
            addCriterion("TENANTID <=", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidLike(String value) {
            addCriterion("TENANTID like", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotLike(String value) {
            addCriterion("TENANTID not like", value, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidIn(List<String> values) {
            addCriterion("TENANTID in", values, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotIn(List<String> values) {
            addCriterion("TENANTID not in", values, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidBetween(String value1, String value2) {
            addCriterion("TENANTID between", value1, value2, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTenantidNotBetween(String value1, String value2) {
            addCriterion("TENANTID not between", value1, value2, "tenantid");
            return (Criteria) this;
        }

        public Criteria andTabnameIsNull() {
            addCriterion("TABNAME is null");
            return (Criteria) this;
        }

        public Criteria andTabnameIsNotNull() {
            addCriterion("TABNAME is not null");
            return (Criteria) this;
        }

        public Criteria andTabnameEqualTo(String value) {
            addCriterion("TABNAME =", value, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameNotEqualTo(String value) {
            addCriterion("TABNAME <>", value, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameGreaterThan(String value) {
            addCriterion("TABNAME >", value, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameGreaterThanOrEqualTo(String value) {
            addCriterion("TABNAME >=", value, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameLessThan(String value) {
            addCriterion("TABNAME <", value, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameLessThanOrEqualTo(String value) {
            addCriterion("TABNAME <=", value, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameLike(String value) {
            addCriterion("TABNAME like", value, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameNotLike(String value) {
            addCriterion("TABNAME not like", value, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameIn(List<String> values) {
            addCriterion("TABNAME in", values, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameNotIn(List<String> values) {
            addCriterion("TABNAME not in", values, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameBetween(String value1, String value2) {
            addCriterion("TABNAME between", value1, value2, "tabname");
            return (Criteria) this;
        }

        public Criteria andTabnameNotBetween(String value1, String value2) {
            addCriterion("TABNAME not between", value1, value2, "tabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameIsNull() {
            addCriterion("PARTTABNAME is null");
            return (Criteria) this;
        }

        public Criteria andParttabnameIsNotNull() {
            addCriterion("PARTTABNAME is not null");
            return (Criteria) this;
        }

        public Criteria andParttabnameEqualTo(String value) {
            addCriterion("PARTTABNAME =", value, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameNotEqualTo(String value) {
            addCriterion("PARTTABNAME <>", value, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameGreaterThan(String value) {
            addCriterion("PARTTABNAME >", value, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameGreaterThanOrEqualTo(String value) {
            addCriterion("PARTTABNAME >=", value, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameLessThan(String value) {
            addCriterion("PARTTABNAME <", value, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameLessThanOrEqualTo(String value) {
            addCriterion("PARTTABNAME <=", value, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameLike(String value) {
            addCriterion("PARTTABNAME like", value, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameNotLike(String value) {
            addCriterion("PARTTABNAME not like", value, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameIn(List<String> values) {
            addCriterion("PARTTABNAME in", values, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameNotIn(List<String> values) {
            addCriterion("PARTTABNAME not in", values, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameBetween(String value1, String value2) {
            addCriterion("PARTTABNAME between", value1, value2, "parttabname");
            return (Criteria) this;
        }

        public Criteria andParttabnameNotBetween(String value1, String value2) {
            addCriterion("PARTTABNAME not between", value1, value2, "parttabname");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeIsNull() {
            addCriterion("PARTFROMTIME is null");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeIsNotNull() {
            addCriterion("PARTFROMTIME is not null");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeEqualTo(Date value) {
            addCriterion("PARTFROMTIME =", value, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeNotEqualTo(Date value) {
            addCriterion("PARTFROMTIME <>", value, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeGreaterThan(Date value) {
            addCriterion("PARTFROMTIME >", value, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("PARTFROMTIME >=", value, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeLessThan(Date value) {
            addCriterion("PARTFROMTIME <", value, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeLessThanOrEqualTo(Date value) {
            addCriterion("PARTFROMTIME <=", value, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeIn(List<Date> values) {
            addCriterion("PARTFROMTIME in", values, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeNotIn(List<Date> values) {
            addCriterion("PARTFROMTIME not in", values, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeBetween(Date value1, Date value2) {
            addCriterion("PARTFROMTIME between", value1, value2, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartfromtimeNotBetween(Date value1, Date value2) {
            addCriterion("PARTFROMTIME not between", value1, value2, "partfromtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeIsNull() {
            addCriterion("PARTENDTIME is null");
            return (Criteria) this;
        }

        public Criteria andPartendtimeIsNotNull() {
            addCriterion("PARTENDTIME is not null");
            return (Criteria) this;
        }

        public Criteria andPartendtimeEqualTo(Date value) {
            addCriterion("PARTENDTIME =", value, "partendtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeNotEqualTo(Date value) {
            addCriterion("PARTENDTIME <>", value, "partendtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeGreaterThan(Date value) {
            addCriterion("PARTENDTIME >", value, "partendtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeGreaterThanOrEqualTo(Date value) {
            addCriterion("PARTENDTIME >=", value, "partendtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeLessThan(Date value) {
            addCriterion("PARTENDTIME <", value, "partendtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeLessThanOrEqualTo(Date value) {
            addCriterion("PARTENDTIME <=", value, "partendtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeIn(List<Date> values) {
            addCriterion("PARTENDTIME in", values, "partendtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeNotIn(List<Date> values) {
            addCriterion("PARTENDTIME not in", values, "partendtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeBetween(Date value1, Date value2) {
            addCriterion("PARTENDTIME between", value1, value2, "partendtime");
            return (Criteria) this;
        }

        public Criteria andPartendtimeNotBetween(Date value1, Date value2) {
            addCriterion("PARTENDTIME not between", value1, value2, "partendtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("CREATETIME is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("CREATETIME is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("CREATETIME =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("CREATETIME <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("CREATETIME >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATETIME >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("CREATETIME <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("CREATETIME <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("CREATETIME in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("CREATETIME not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("CREATETIME between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("CREATETIME not between", value1, value2, "createtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated do_not_delete_during_merge Tue Jan 08 16:40:09 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ONLINEQC.Y_STABPARTITIONTAB
     *
     * @mbg.generated Tue Jan 08 16:40:09 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}