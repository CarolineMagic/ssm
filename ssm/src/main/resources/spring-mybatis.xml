<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!-- 扫描service包下所有使用注解的类型 -->
    <context:component-scan base-package="com.spring"/>

    <!-- 配置数据库相关参数properties的属性：${url} -->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <!-- 数据库连接池 -mysql-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}"/>
        <property name="minPoolSize" value="${c3p0.minPoolSize}"/>
        <property name="autoCommitOnClose" value="${c3p0.autoCommitOnClose}"/>
        <property name="checkoutTimeout" value="${c3p0.checkoutTimeout}"/>
        <property name="acquireRetryAttempts" value="${c3p0.acquireRetryAttempts}"/>
    </bean>

    <!-- 配置SqlSessionFactory对象 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描model包 使用别名 -->
        <property name="typeAliasesPackage" value="com.spring.model.Tuser"/>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <!--<property name="mapperLocations" value="classpath:mapper/*.xml"/>-->
        <!--<property name="mapperLocations" value="classpath:mapper/QcCorpustabMapper.xml"></property>-->
        <property name="mapperLocations" value="classpath:mapper/TuserMapper.xml"></property>
    </bean>

    <!-- 配置扫描Dao接口包，动态实现Dao接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.spring.dao"/>
    </bean>

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置基于注解的声明式事务 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--数据库连接池-oracle-->
    <bean id="dataSource_2" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${oracleDriverClassName}"></property>
        <property name="jdbcUrl" value="${oracleUrl}"></property>
        <property name="user" value="${oracleUserName}"></property>
        <property name="password" value="${oraclePassword}"></property>
        <property name="acquireIncrement" value="${oracle.c3p0.acquireIncrement}"></property>
        <property name="idleConnectionTestPeriod" value="${oracle.c3p0.idleConnectionTestPeriod}"></property>
        <property name="initialPoolSize" value="${oracle.c3p0.initialPoolSize}"></property>
        <property name="minPoolSize" value="${oracle.c3p0.minPoolSize}"></property>
        <property name="maxPoolSize" value="${oracle.c3p0.maxPoolSize}"></property>
        <property name="maxStatements" value="${oracle.c3p0.maxStatements}"></property>
        <property name="maxIdleTime" value="${oracle.c3p0.maxIdleTime}"></property>
        <property name="numHelperThreads" value="${oracle.c3p0.numHelperThread}"></property>
    </bean>

    <!--配置sqlSessionFactory对象-->
    <bean id="sqlSessionFactory_2" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_2"></property>
        <property name="typeAliasesPackage" value="com.spring.model.QcCorpustab"></property>
        <property name="mapperLocations" value="classpath:mapper/QcCorpustabMapper.xml"></property>
    </bean>

    <!--配置扫描dao接口包-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory_2"></property>
        <property name="basePackage" value="com.spring.dao3"></property>
    </bean>

    <!--配置事务管理器-->
    <bean id="transactionManager2" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--注入数据库连接池-->
        <property name="dataSource" ref="dataSource_2"></property>
    </bean>

    <!--全注解方式-->
    <tx:annotation-driven transaction-manager="transactionManager2"></tx:annotation-driven>

    <!--<bean id="initMethod" class="com.spring.quartz.Job" init-method="execute"></bean>-->

    <!--<bean id="jobDetail" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">-->
        <!--<property name="jobClass" value="com.spring.quartz.ElasticsearchQuartz"></property>-->
        <!--<property name="durability" value="true"></property>-->
    <!--</bean>-->

    <!--<bean id="asyncQuartz" class="com.spring.quartz.ElasticsearchQuartz"></bean>-->

    <!--<bean id="asyncJob" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="asyncQuartz"></property>-->
        <!--<property name="targetMethod" value="execute"></property>-->
        <!--<property name="concurrent" value="false"></property>-->
    <!--</bean>-->

    <!--<bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerFactoryBean">-->
        <!--<property name="jobDetail" ref="asyncJob"></property>-->
        <!--<property name="startDelay" value="60000"></property>-->
        <!--<property name="repeatInterval" value="300000"></property>-->
    <!--</bean>-->

    <!--<bean id="startQuartz" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <!--<property name="triggers">-->
            <!--<list>-->
                <!--<ref bean="simpleTrigger"></ref>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->
</beans>