<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.dao3.QcCorpustabMapper">
  <resultMap id="BaseResultMap" type="com.spring.model.QcCorpustab">
    <id column="TENANTID" jdbcType="VARCHAR" property="tenantid" />
    <id column="CORPUSID" jdbcType="DECIMAL" property="corpusid" />
    <result column="XHID" jdbcType="DECIMAL" property="xhid" />
    <result column="CORPUSTYPE" jdbcType="VARCHAR" property="corpustype" />
    <result column="CORPUSTEXT" jdbcType="OTHER" property="corpustext" />
    <result column="COMFORTDEGREE" jdbcType="OTHER" property="comfortdegree" />
    <result column="SENSITIVITYLEVEL" jdbcType="VARCHAR" property="sensitivitylevel" />
    <result column="PERSPECTIVE" jdbcType="VARCHAR" property="perspective" />
    <result column="BUSSINESSCENARIOS" jdbcType="VARCHAR" property="bussinesscenarios" />
    <result column="BUSSINESSTYPE" jdbcType="VARCHAR" property="bussinesstype" />
    <result column="KEYSTATUS" jdbcType="VARCHAR" property="keystatus" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Jan 08 15:47:04 CST 2019.
    -->
    TENANTID, CORPUSID, XHID, CORPUSTYPE, CORPUSTEXT, COMFORTDEGREE, SENSITIVITYLEVEL, 
    PERSPECTIVE, BUSSINESSCENARIOS, BUSSINESSTYPE, KEYSTATUS
  </sql>

  <select id="queryCustomerClient" resultType="java.util.HashMap">
	select  rownum id,SUBSTR(TO_CHAR(calltime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) time,WARNINGWORDS,FEELEXCEPTION,
		  JNWORDS,SPEEDEXCEPTION,area,agentGroup,smallagentGroup
		  from (select  max(b.callfrom) as callfrom,  max(b.calltime) as calltime,  max(b.talktime) as talktime,
						  max(b.agentNo) as agentNo, max(b.agentName)as agentName, max(b.agentGroup) as agentGroup,
						  max( b.smallagentGroup ) AS smallagentGroup, max(b.area) as area,
						  max(b.busitype) as BUSSINESSTYPE,
						  CASE WHEN sum(b.WARNINGWORDS)>0 THEN '客户敏感词' ELSE NULL END AS WARNINGWORDS,
						  CASE WHEN sum(b.JNWORDS)>0 THEN '技能不匹配' ELSE NULL END AS JNWORDS,
						  CASE WHEN sum(b.EmotionUnusual)>0 THEN '客户情绪异常' ELSE NULL END AS FEELEXCEPTION,
						  CASE WHEN sum(b.SpeedUnusual)>0 THEN '客户语速异常' ELSE NULL END AS SPEEDEXCEPTION
						  from (
							  		select   b.CSID,b.CALLFROM,b.CALLTIME,b.TALKTIME,   b.C10 AS agentNo,
							  		b.C11 AS agentName,b.C20 AS agentGroup, b.C14 AS smallagentGroup,  b.C23 AS area,
									T.busitype,  case when t.POPUPTYPE='JnWords' then 1 else 0 end as JNWORDS,
									case when t.POPUPTYPE='WarningWords' then 1 else 0 end as WarningWords,
									case when t.POPUPTYPE='SpeedUnusual' then 1 else 0 end as SpeedUnusual,
									case when t.POPUPTYPE='EmotionUnusual' then 1 else 0 end as EmotionUnusual  from (
									SELECT b.TENANTID,b.CSID,b.CALLFROM,b.CALLTIME,b.TALKTIME,y.C10,y.C11,y.C20,y.C23,y.C14
									FROM QC_CALLSESSIONSTAB b,Y_COBJECTINFOTAB y WHERE b.AGENTID=y.C12   AND b.TENANTID='egoo'
							) b   left join v_popupinfo t
	on b.tenantid=t.TENANTID and b.csid=t.CSID  ) b  group by b.csid  order by b.csid  ) b
  </select>

  <select id="queryAgentProblemAndRemaind" resultType="java.util.HashMap">
    SELECT 	rownum id,k.tenantid, 	k.csid, 	k.c23, 	k.c20, 	k.c14, 	k.c24, k.c11, 	k.c10, 	k.calltime, 	k.callfrom, 	k.bussinesstype, 	k.talktime,
    fn_number2date (nvl(dd.silenttime,0)) AS silenttime,
    nvl(k.questionsnumber,0) + nvl(dd.talktimeouts,0)+nvl(dd.nSilentTimeout,0) questionsnumber,
    k.sensitivemuber, 	k.emotionsnumber, 	k.abnormalnumber, 	nvl(dd.nSilentTimeout,0) AS silenttimeout,
    nvl( dd.talktimeouts,0) AS talktimeouts  FROM
    (
    SELECT 	t.tenantid, 	t.csid, 	t.c23, 	t.c20, 	t.c14, t.c24, 	t.c11, 	t.c10, 	t.calltime, 	t.callfrom,
    nvl( t.bussinesstype, ' ' ) AS bussinesstype, 	fn_number2date ( t.talktime ) AS talktime,
    fn_number2date ( t.silenttime ) AS silenttime, 	( t.sensitivemuber + t.emotionsnumber + t.abnormalnumber ) AS questionsnumber,
    t.sensitivemuber, 	t.emotionsnumber, 	t.abnormalnumber  FROM 	(
    SELECT 	t.tenantid, 	t.csid,
    min( t.c23 ) AS c23, 	min( t.c20 ) AS c20, 	min( t.c14 ) AS c14, 	min( t.c24 ) AS c24,
    min( t.c11 ) AS c11, 	min( t.c10 ) AS c10, 	min( t.calltime ) AS calltime,
    min( t.callfrom ) AS callfrom, 	t.bussinesstype,
    min( t.talktime ) AS talktime, 	sum( t.silenttime ) AS silenttime,
    sum( t.sensitivemuber ) AS sensitivemuber,
    sum( t.emotionsnumber ) AS emotionsnumber,
    sum( t.abnormalnumber ) AS abnormalnumber  FROM 	(
    SELECT 	v.*, 	cd.c14,cd.c11, 	cd.c10, 	cd.c20, 	cd.c23, 	cd.c24,
    nvl( b.sensitivemuber, 0 ) AS sensitivemuber,
    cp.busitype AS bussinesstype,
    nvl( c.emotionsnumber, 0 ) AS emotionsnumber,
    nvl( c.abnormalnumber, 0 ) AS abnormalnumber  FROM  	(
    SELECT 	cs.tenantid, 	cs.csid, 	tt.ttid,       cs.agentid, 	cs.callfrom, 	cs.calltime, 	cs.talktime,
    case when      tt.silenttime >0 then tt.silenttime else 0 end as silenttime   FROM
    qc_callsessionstab cs
    INNER JOIN
    qc_talktexttab tt
    ON cs.tenantid = tt.tenantid
    AND tt.csid = cs.csid   WHERE  	tt.rolename = 'AGENT'
    AND cs.tenantid = 'egoo'   	) v
    LEFT JOIN (
    SELECT  	tenantid, 	csid, 	ttid,	sum( sensitivemuber ) AS sensitivemuber  FROM  	(
    SELECT 	tenantid, 	csid, 	ttid, 	corpusid,  CASE 		WHEN corpustype = 'WarningWords' THEN
    corpuscount ELSE 0  	END AS sensitivemuber 	FROM
    qc_talktextchecktab
    where corpustype = 'WarningWords'  )  GROUP BY 	tenantid, 	csid, 	ttid  	) b
    ON v.tenantid = b.tenantid AND v.csid = b.csid  	AND v.ttid = b.ttid
    LEFT JOIN (
    SELECT 	       b.tenantid, 		b.csid, 		b.busitype  	FROM
    ( 		SELECT 			row_number () over (
    partition BY s.csid ORDER BY s.popupcreatetime ASC ) rn,
    s.tenantid, 	       s.csid, 			s.busitype  		FROM
    qc_popupinfo s
    WHERE 			s.popuptype = 'JnWords'        AND s.ttrole = 'USER'  		) b
    WHERE  		b.rn = 1  	) cp ON v.tenantid = cp.tenantid  	AND cp.csid = v.csid
    LEFT JOIN (
    SELECT c.tenantid, 		c.csid, 		c.ttid,
    SUM( emotionsnumber ) AS emotionsnumber,
    SUM( abnormalnumber ) AS abnormalnumber 	FROM ( 		SELECT 			c.tenantid, 	       c.csid,
    c.ttid,
    CASE 			       WHEN c.attrtype = 'EVENT_EMOTION_UNUSUAL'
    AND c.attrval >= c.throsval THEN 					1 ELSE 0
    END AS emotionsnumber,
    CASE 				WHEN c.attrtype = 'SpeedUnusual'
    AND c.attrval >= c.throsval THEN
    1 ELSE 0       END AS abnormalnumber
    FROM 		       qc_talkattrchecktab c  					) c
    GROUP BY  					c.tenantid, 		       c.csid, 					c.ttid
    ) c ON c.tenantid = v.tenantid  				AND c.csid = v.csid    AND c.ttid = v.ttid
    INNER JOIN
    y_cobjectinfotab cd
    ON cd.c12 = v.agentid  				AND cd.tenantid = v.tenantid   ) t
    GROUP BY  			t.tenantid,
    t.csid, 			t.bussinesstype  		) t
    ORDER BY       t.calltime  	) k
    left JOIN ( 	SELECT 		c.tenantid, 	       c.csid,
    SUM( silenttime ) AS silenttime,  		SUM( talktimeouts ) AS talktimeouts,
    SUM( SilentTimeout ) AS nSilentTimeout         FROM 		(
    SELECT 			c.tenantid, 	       c.csid, 		CASE
    WHEN c.attrtype = 'SilentTimeout'      AND
    c.attrval >0 THEN
    c.attrval ELSE 0       END AS silenttime ,
    CASE 			WHEN c.attrtype = 'SilentTimeout'
    AND c.attrval >= c.throsval THEN       1 ELSE 0
    END AS SilentTimeout ,
    CASE   WHEN c.attrtype = 'TalkTimeout'
    AND c.ttid = '0'
    AND c.attrval >= c.throsval THEN
    1 ELSE 0  				END AS talktimeouts  		       FROM
    qc_talkattrchecktab c
    ) c    GROUP BY 			c.tenantid, 			c.csid         ) dd ON dd.csid = k.csid
    AND dd.tenantid = k.tenantid
  </select>

  <select id="queryTest" resultType="java.util.HashMap">
    select rownum id,t.* from (select b.smallagentname,b.smallagentGroup,b.area,b.agentGroup, case when b.POPUPTYPE='JnWords' then '技能不匹配'   when b.POPUPTYPE='WarningWords'
    then '客户敏感词'   when b.POPUPTYPE='SpeedUnusual' then '客户语速异常'  when b.POPUPTYPE='EmotionUnusual' then '客户情绪异常'   else null end as
    CONTROL  ,sum(row1) as row1  ,sum(row2) as row2  ,sum(row3) as row3  ,sum(row4) as row4  ,sum(row5) as row5  ,sum(row6) as row6  ,
    sum(row7) as row7  ,sum(row8) as row8  ,sum(row9) as row9  ,
    sum(row10) as row10  ,sum(row11) as row11  ,sum(row12) as row12  ,
    sum(row13) as row13  ,sum(row14) as row14  ,sum(row15) as row15  ,sum(row16) as row16  ,sum(row17) as row17  ,
    sum(row18) as row18  ,sum(row19) as row19  ,sum(row20) as row20  ,sum(row21) as row21  ,
    sum(row22) as row22  ,sum(row23) as row23  ,sum(row24) as row24  ,sum(row25) as row25  ,sum(row26) as row26  ,
    sum(row27) as row27  ,sum(row28) as row28  ,sum(row29) as row29  ,sum(row30) as row30  ,sum(row31) as row31  from  (
    select   b.CSID,  b.C20 AS agentGroup,  b.C23 AS area,  b.C14 AS smallagentGroup, b.C11 AS smallagentname,
    case when b.calltime='1' then 1 else 0 end as row1,  case when b.calltime='2' then 1 else 0 end as row2,
    case when b.calltime='3' then 1 else 0 end as row3,  case when b.calltime='4' then 1 else 0 end as row4,
    case when b.calltime='5' then 1 else 0 end as row5,  case when b.calltime='6' then 1 else 0 end as row6,
    case when b.calltime='7' then 1 else 0 end as row7,  case when b.calltime='8' then 1 else 0 end as row8,
    case when b.calltime='9' then 1 else 0 end as row9,  case when b.calltime='10' then 1 else 0 end as row10,
    case when b.calltime='11' then 1 else 0 end as row11,  case when b.calltime='12' then 1 else 0 end as row12,
    case when b.calltime='13' then 1 else 0 end as row13,  case when b.calltime='14' then 1 else 0 end as row14,
    case when b.calltime='15' then 1 else 0 end as row15,  case when b.calltime='16' then 1 else 0 end as row16,
    case when b.calltime='17' then 1 else 0 end as row17,  case when b.calltime='18' then 1 else 0 end as row18,
    case when b.calltime='19' then 1 else 0 end as row19,  case when b.calltime='20' then 1 else 0 end as row20,
    case when b.calltime='21' then 1 else 0 end as row21,  case when b.calltime='22' then 1 else 0 end as row22,
    case when b.calltime='23' then 1 else 0 end as row23,  case when b.calltime='24' then 1 else 0 end as row24,
    case when b.calltime='25' then 1 else 0 end as row25,  case when b.calltime='26' then 1 else 0 end as row26,
    case when b.calltime='27' then 1 else 0 end as row27,  case when b.calltime='28' then 1 else 0 end as row28,
    case when b.calltime='29' then 1 else 0 end as row29,  case when b.calltime='30' then 1 else 0 end as row30,
    case when b.calltime='31' then 1 else 0 end as row31,  t.POPUPTYPE   from (
    SELECT b.TENANTID,b.CSID, to_number(to_char(b.calltime,'dd')) as calltime, y.C20,y.C23,y.c14,y.C11
    FROM
    QC_CALLSESSIONSTAB b,Y_COBJECTINFOTAB y
    WHERE b.AGENTID=y.C12
    AND b.CALLTIME>=to_date('201812','yyyymm') AND
    b.CALLTIME &lt; add_months(trunc(to_date('201812','yyyymm')),1)   AND b.TENANTID='egoo'  AND y.c23 IN ('西安中心')  AND y.c20 IN ('西安-中端组')
    AND C14 IN ('白金2组(杨晨2)')  ) b     left join
    v_popupinfo t
    on b.tenantid=t.TENANTID and b.csid=t.CSID
    where t.POPUPTYPE IN
    ( 'WarningWords', 'JnWords','SpeedUnusual','EmotionUnusual' )  group by   b.c11,b.c14,b.c23,b.c20,b.csid,t.POPUPTYPE ,b.calltime ) b
    group by b.agentGroup,b.smallagentname,b.smallagentGroup,b.area,b.POPUPTYPE  order by
    b.agentGroup,b.smallagentname,b.smallagentGroup,b.area,b.POPUPTYPE)t
  </select>

  <select id="queryCustomerProblemMonitor" resultType="java.util.HashMap">
    select rownum id, t.*  from (select substr(to_char(q.calltime,'yyyy-mm-dd hh24:mi:ss'),0,7) as time,b.smallagentname,b.smallagentGroup,b.area,b.agentGroup, case when b.POPUPTYPE='JnWords' then '技能不匹配'   when b.POPUPTYPE='WarningWords'
    then '客户敏感词'   when b.POPUPTYPE='SpeedUnusual' then '客户语速异常'  when b.POPUPTYPE='EmotionUnusual' then '客户情绪异常'   else null end as
    CONTROL  ,sum(row1) as row1  ,sum(row2) as row2  ,sum(row3) as row3  ,sum(row4) as row4  ,sum(row5) as row5  ,sum(row6) as row6  ,
    sum(row7) as row7  ,sum(row8) as row8  ,sum(row9) as row9  ,
    sum(row10) as row10  ,sum(row11) as row11  ,sum(row12) as row12  ,
    sum(row13) as row13  ,sum(row14) as row14  ,sum(row15) as row15  ,sum(row16) as row16  ,sum(row17) as row17  ,
    sum(row18) as row18  ,sum(row19) as row19  ,sum(row20) as row20  ,sum(row21) as row21  ,
    sum(row22) as row22  ,sum(row23) as row23  ,sum(row24) as row24  ,sum(row25) as row25  ,sum(row26) as row26  ,
    sum(row27) as row27  ,sum(row28) as row28  ,sum(row29) as row29  ,sum(row30) as row30  ,sum(row31) as row31  from
		(
    select   b.tenantid,b.CSID,  b.C20 AS agentGroup,  b.C23 AS area,  b.C14 AS smallagentGroup, b.C11 AS smallagentname,
    case when b.calltime='1' then 1 else 0 end as row1,  case when b.calltime='2' then 1 else 0 end as row2,
    case when b.calltime='3' then 1 else 0 end as row3,  case when b.calltime='4' then 1 else 0 end as row4,
    case when b.calltime='5' then 1 else 0 end as row5,  case when b.calltime='6' then 1 else 0 end as row6,
    case when b.calltime='7' then 1 else 0 end as row7,  case when b.calltime='8' then 1 else 0 end as row8,
    case when b.calltime='9' then 1 else 0 end as row9,  case when b.calltime='10' then 1 else 0 end as row10,
    case when b.calltime='11' then 1 else 0 end as row11,  case when b.calltime='12' then 1 else 0 end as row12,
    case when b.calltime='13' then 1 else 0 end as row13,  case when b.calltime='14' then 1 else 0 end as row14,
    case when b.calltime='15' then 1 else 0 end as row15,  case when b.calltime='16' then 1 else 0 end as row16,
    case when b.calltime='17' then 1 else 0 end as row17,  case when b.calltime='18' then 1 else 0 end as row18,
    case when b.calltime='19' then 1 else 0 end as row19,  case when b.calltime='20' then 1 else 0 end as row20,
    case when b.calltime='21' then 1 else 0 end as row21,  case when b.calltime='22' then 1 else 0 end as row22,
    case when b.calltime='23' then 1 else 0 end as row23,  case when b.calltime='24' then 1 else 0 end as row24,
    case when b.calltime='25' then 1 else 0 end as row25,  case when b.calltime='26' then 1 else 0 end as row26,
    case when b.calltime='27' then 1 else 0 end as row27,  case when b.calltime='28' then 1 else 0 end as row28,
    case when b.calltime='29' then 1 else 0 end as row29,  case when b.calltime='30' then 1 else 0 end as row30,
    case when b.calltime='31' then 1 else 0 end as row31,  t.POPUPTYPE   from (
    SELECT b.TENANTID,b.CSID, to_number(to_char(b.calltime,'dd')) as calltime, y.C20,y.C23,y.c14,y.C11
    FROM
    QC_CALLSESSIONSTAB b,Y_COBJECTINFOTAB y
    WHERE b.AGENTID=y.C12
    AND b.TENANTID='egoo'  AND y.c23 IN ('西安中心')  AND y.c20 IN ('西安-中端组')
    AND C14 IN ('白金2组(杨晨2)')  ) b     left join
    v_popupinfo t
    on b.tenantid=t.TENANTID and b.csid=t.CSID
    where t.POPUPTYPE IN
    ( 'WarningWords', 'JnWords','SpeedUnusual','EmotionUnusual' )  group by   b.tenantid,b.c11,b.c14,b.c23,b.c20,b.csid,t.POPUPTYPE ,b.calltime ) b ,qc_callsessionstab q where b.tenantid=q.tenantid and b.csid=q.csid
    group by substr(to_char(q.calltime,'yyyy-mm-dd hh24:mi:ss'),0,7),b.agentGroup,b.smallagentname,b.smallagentGroup,b.area,b.POPUPTYPE  order by
    substr(to_char(q.calltime,'yyyy-mm-dd hh24:mi:ss'),0,7),b.agentGroup,b.smallagentname,b.smallagentGroup,b.area,b.POPUPTYPE)t
  </select>

  <select id="queryGroupProblemMonitorTable" resultType="java.util.HashMap">
    select ROWNUM id , k.*  from (SELECT
       T.C20,T.C23,T.C14,
       SUBSTR(TO_CHAR(T.callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) AS callTime,
 SUM((
	T.sensitivemuber + T.emotionsnumber + nvl(dd.nSilenttimeout,0) + T.abnormalnumber + nvl(dd.talktimeouts,0)
	)) AS questionsnumber,
	SUM( T.sensitivemuber ) AS sensitivemuber,
	SUM( T.emotionsnumber ) AS emotionsnumber,
	SUM( T.abnormalnumber ) AS abnormalnumber,
	SUM( nvl(dd.nSilenttimeout,0) ) AS silenttimeout,
	SUM( nvl(dd.talktimeouts,0) ) AS talktimeouts
FROM
	(
SELECT
	T.tenantid,
	T.csid,
	T.c23,
	T.c20,
	T.c14,
	T.c24,
	T.c11,
	T.c10,
	T.callTime,
	T.callFrom,
	nvl( T.bussinesstype, ' ' ) AS bussinesstype,
	FN_NUMBER2DATE ( T.talkTime ) AS talkTime,
	FN_NUMBER2DATE ( T.silentTime ) AS silentTime,
	( T.sensitivemuber + T.emotionsnumber + T.silenttimeout + T.abnormalnumber ) AS questionsnumber,
	T.sensitivemuber,
	T.emotionsnumber,
	T.abnormalnumber,
	T.silenttimeout,
	T.remindersensis
FROM
	(
SELECT
	T.tenantid,
	T.csid,
	min( T.c23 ) AS c23,
	min( T.c20 ) AS c20,
	min( T.c14 ) AS c14,
	min( T.c24 ) AS c24,
	min( T.c11 ) AS c11,
	min( T.c10 ) AS c10,
	min( T.callTime ) AS callTime,
	min( T.callFrom ) AS callFrom,
	T.bussinesstype,
	min( T.talkTime ) AS talkTime,
	sum( T.silentTime ) AS silentTime,
	sum( T.sensitivemuber ) AS sensitivemuber,
	sum( T.emotionsnumber ) AS emotionsnumber,
	sum( T.abnormalnumber ) AS abnormalnumber,
	sum( T.silenttimeout ) AS silenttimeout,
	sum( T.remindersensis ) AS remindersensis
FROM
	(
SELECT
	v.*,
	cd.C14,
	cd.C11,
	cd.C10,
	cd.C20,
	cd.C23,
	cd.C24,
	nvl( b.SENSITIVEMUBER, 0 ) AS SENSITIVEMUBER,
	nvl( b.REMINDERSENSIS, 0 ) AS REMINDERSENSIS,
	cp.BUSITYPE AS bussinesstype,
	nvl( c.emotionsnumber, 0 ) AS emotionsnumber,
	nvl( c.abnormalnumber, 0 ) AS abnormalnumber,
	nvl( c.silenttimeout, 0 ) AS silenttimeout
FROM
	(
SELECT
	cs.tenantid,
	CS.CSID,
	tt.ttid,
	cs.agentId,
	cs.callFrom,
	cs.callTime,
	cs.talkTime,
	tt.silentTime
FROM
	qc_callsessionstab cs
	INNER JOIN
	qc_talktexttab tt
	ON CS.TENANTID = tt.TENANTID
	AND TT.CSID = CS.CSID
WHERE
	tt.ROLENAME = 'AGENT'
 and cs.tenantId='egoo'  	) v
	LEFT JOIN (
SELECT
	tenantid,
	csid,
	ttid,
	sum( sensitivemuber ) AS sensitivemuber,
	sum( remindersensis ) AS remindersensis
FROM
	(
SELECT
	tenantid,
	csid,
	ttid,
	corpusid,
CASE
		WHEN corpustype = 'WarningWords' THEN
		corpuscount ELSE 0
	END AS sensitivemuber,
CASE
		WHEN corpustype = 'WarningWords'
		AND corpuscount > 0 THEN
			corpuscount - 1 ELSE 0
		END AS remindersensis
	FROM
		qc_talktextchecktab
		where  corpustype = 'WarningWords'
	)
GROUP BY
	tenantid,
	csid,
	ttid
	) b ON v.tenantid = b.tenantid
	AND v.CSID = b.CSID
	AND v.TTID = b.TTID
	LEFT JOIN (
	SELECT
		b.TENANTID,
		b.CSID,
		b.BUSITYPE
	FROM
		(
		SELECT
			row_number () over ( partition BY s.csid ORDER BY s.POPUPCREATETIME ASC ) rn,
			s.TENANTID,
			s.CSID,
			s.BUSITYPE
		FROM
			QC_POPUPINFO s
		WHERE
			s.POPUPTYPE = 'JnWords'
			AND s.TTROLE = 'AGENT'
		) b
	WHERE
		b.RN = 1
	) cp ON v.tenantid = CP.TENANTID
	AND cp.csid = v.csid
	LEFT JOIN (
	SELECT
		c.tenantid,
		c.csid,
		c.TTID,
		SUM ( emotionsnumber ) AS emotionsnumber,
		SUM ( abnormalnumber ) AS abnormalnumber,
		SUM ( silenttimeout ) AS silenttimeout
	FROM
		(
		SELECT
			c.tenantid,
			c.csid,
			c.TTID,
		CASE
				WHEN c.attrtype = 'EVENT_EMOTION_UNUSUAL'
				AND c.attrval >= c.THROSVAL THEN
					1 ELSE 0
				END AS emotionsnumber,
			CASE
					WHEN c.attrtype = 'SpeedUnusual'
					AND c.attrval >= c.THROSVAL THEN
						1 ELSE 0
					END AS abnormalnumber,
				CASE
						WHEN c.attrtype = 'SilentTimeout'
						AND c.attrval >= c.THROSVAL THEN
							1 ELSE 0
						END AS silenttimeout
					FROM
						qc_talkattrchecktab c
					) c
				GROUP BY
					c.tenantid,
					c.csid,
					c.TTID
				) c ON c.tenantid = v.tenantid
				AND c.csid = v.csid
				AND c.TTID = v.TTID
				INNER JOIN Y_CObjectInfoTab cd ON cd.C12 = v.agentId
				AND cd.tenantid = v.tenantid
			) T
		GROUP BY
			T.tenantid,
			T.csid,
			T.bussinesstype
		) T
	ORDER BY
		t.callTime
	) T
	Left JOIN (
	SELECT
		c.tenantid,
		c.csid,
		SUM( talktimeouts ) AS talktimeouts,
		SUM( SilentTimeout ) AS nSilentTimeout
	FROM
		(
		SELECT
			c.tenantid,
			c.csid,
		CASE
				WHEN c.attrtype = 'SilentTimeout'
				AND c.attrval >= c.throsval THEN
					1 ELSE 0
				END AS SilentTimeout ,
		CASE
				WHEN c.attrtype = 'TalkTimeout'
				AND c.ttid = '0'
				AND c.attrval >= c.throsval THEN
					1 ELSE 0
				END AS talktimeouts
			FROM
				qc_talkattrchecktab c
			) c
		GROUP BY
			c.tenantid,
			c.csid
		) dd ON dd.csid = t.csid
		AND dd.tenantid = t.tenantid
	WHERE
		1 = 1  and t.C23 IN('西安中心' )  and t.C20 IN('西安-中端组' )  and t.C14 IN('白金2组(杨晨2)' )
		GROUP BY T.tenantId,T.C23,T.C20,T.C14,SUBSTR(TO_CHAR(T.callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) ORDER BY CALLTIME)k where k.questionsnumber>0
  </select>


  <select id="queryClientMonitorProblemTable" resultType="java.util.HashMap">
   SELECT
	ROWNUM id,
	k.*
FROM
	(
SELECT
	T.tenantId,
	T.C23,
	T.C20,
	T.C11,
	T.C10,
	T.C14,
       SUBSTR(TO_CHAR(T.callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) AS callTime,
	SUM ((
	T.sensitivemuber + T.emotionsnumber + T.abnormalnumber +nvl(dd.talktimeouts,0) +nvl(dd.silenttimeout,0)
	)) AS questionsnumber,
	SUM ( T.sensitivemuber ) AS sensitivemuber,
	SUM ( T.emotionsnumber ) AS emotionsnumber,
	SUM ( T.abnormalnumber ) AS abnormalnumber,
	SUM(nvl(dd.silenttimeout,0)) AS silenttimeout,
	SUM(nvl(dd.talktimeouts,0)) AS talktimeouts
FROM
	(
SELECT
	T.tenantid,
	T.csid,
	T.c23,
	T.c20,
	T.c14,
	T.c24,
	T.c11,
	T.c10,
	T.callTime,
	T.callFrom,
	nvl( T.bussinesstype, ' ' ) AS bussinesstype,
	FN_NUMBER2DATE ( T.talkTime ) AS talkTime,
	FN_NUMBER2DATE ( T.silentTime ) AS silentTime,
	( T.sensitivemuber + T.emotionsnumber + T.abnormalnumber ) AS questionsnumber,
	T.sensitivemuber,
	T.emotionsnumber,
	T.abnormalnumber,
	T.remindersensis
FROM
	(
SELECT
	T.tenantid,
	T.csid,
	min( T.c23 ) AS c23,
	min( T.c20 ) AS c20,
	min( T.c14 ) AS c14,
	min( T.c24 ) AS c24,
	min( T.c11 ) AS c11,
	min( T.c10 ) AS c10,
	min( T.callTime ) AS callTime,
	min( T.callFrom ) AS callFrom,
	T.bussinesstype,
	min( T.talkTime ) AS talkTime,
	sum( T.silentTime ) AS silentTime,
	sum( T.sensitivemuber ) AS sensitivemuber,
	sum( T.emotionsnumber ) AS emotionsnumber,
	sum( T.abnormalnumber ) AS abnormalnumber,
	sum( T.remindersensis ) AS remindersensis
FROM
	(
SELECT
	v.*,
	cd.C14,
	cd.C11,
	cd.C10,
	cd.C20,
	cd.C23,
	cd.C24,
	nvl( b.SENSITIVEMUBER, 0 ) AS SENSITIVEMUBER,
	nvl( b.REMINDERSENSIS, 0 ) AS REMINDERSENSIS,
	cp.BUSITYPE AS bussinesstype,
	nvl( c.emotionsnumber, 0 ) AS emotionsnumber,
	nvl( c.abnormalnumber, 0 ) AS abnormalnumber
FROM
	(
SELECT
	cs.tenantid,
	CS.CSID,
	tt.ttid,
	cs.agentId,
	cs.callFrom,
	cs.callTime,
	cs.talkTime,
	tt.silentTime
FROM
	qc_callsessionstab cs
	INNER JOIN
	qc_talktexttab tt
	ON CS.TENANTID = tt.TENANTID
	AND TT.CSID = CS.CSID
WHERE
	tt.ROLENAME = 'AGENT'
 and cs.tenantId='egoo'   	) v
	LEFT JOIN (
SELECT
	tenantid,
	csid,
	ttid,
	sum( sensitivemuber ) AS sensitivemuber,
	sum( remindersensis ) AS remindersensis
FROM
	(
SELECT
	tenantid,
	csid,
	ttid,
	corpusid,
CASE
		WHEN corpustype = 'WarningWords' THEN
		corpuscount ELSE 0
	END AS sensitivemuber,
CASE
		WHEN corpustype = 'WarningWords'
		AND corpuscount > 0 THEN
			corpuscount - 1 ELSE 0
		END AS remindersensis
	FROM
		qc_talktextchecktab
		where  corpustype = 'WarningWords'
	)
GROUP BY
	tenantid,
	csid,
	ttid
	) b ON v.tenantid = b.tenantid
	AND v.CSID = b.CSID
	AND v.TTID = b.TTID
	LEFT JOIN (
	SELECT
		b.TENANTID,
		b.CSID,
		b.BUSITYPE
	FROM
		(
		SELECT
			row_number () over ( partition BY s.csid ORDER BY s.POPUPCREATETIME ASC ) rn,
			s.TENANTID,
			s.CSID,
			s.BUSITYPE
		FROM
			QC_POPUPINFO s
		WHERE
			s.POPUPTYPE = 'JnWords'
			AND s.TTROLE = 'AGENT'
		) b
	WHERE
		b.RN = 1
	) cp ON v.tenantid = CP.TENANTID
	AND cp.csid = v.csid
	LEFT JOIN (
	SELECT
		c.tenantid,
		c.csid,
		c.TTID,
		SUM ( emotionsnumber ) AS emotionsnumber,
		SUM ( abnormalnumber ) AS abnormalnumber
	FROM
		(
		SELECT
			c.tenantid,
			c.csid,
			c.TTID,
		CASE
				WHEN c.attrtype = 'EVENT_EMOTION_UNUSUAL'
				AND c.attrval >= c.THROSVAL THEN
					1 ELSE 0
				END AS emotionsnumber,
			CASE
					WHEN c.attrtype = 'SpeedUnusual'
					AND c.attrval >= c.THROSVAL THEN
						1 ELSE 0
					END AS abnormalnumber
						FROM
							qc_talkattrchecktab c
						) c
					GROUP BY
						c.tenantid,
						c.csid,
						c.TTID
					) c ON c.tenantid = v.tenantid
					AND c.csid = v.csid
					AND c.TTID = v.TTID
					INNER JOIN
					Y_CObjectInfoTab cd
					ON cd.C12 = v.agentId
					AND cd.tenantid = v.tenantid
				) T
			GROUP BY
				T.tenantid,
				T.csid,
				T.bussinesstype
			) T
		ORDER BY
			t.callTime
		) T
		Left JOIN (
SELECT
	c.tenantid,
	c.csid,
	SUM( talktimeouts ) AS talktimeouts,
	SUM( silenttimeout ) AS silenttimeout
FROM
	(
SELECT
	c.tenantid,
	c.csid,
CASE
	WHEN c.attrtype = 'TalkTimeout'
	AND c.ttid = '0'
	AND c.attrval >= c.throsval THEN
	1 ELSE 0
END AS talktimeouts ,
				CASE
						WHEN c.attrtype = 'SilentTimeout'
						AND c.attrval >= c.THROSVAL THEN
							1 ELSE 0
						END AS silenttimeout
FROM
	qc_talkattrchecktab c
	) c
GROUP BY
	c.tenantid,
	c.csid )
		dd ON dd.csid = t.csid
		AND dd.tenantid = t.tenantid
	WHERE 1=1  and t.C23 IN('西安中心' )  and t.C20 IN('西安-中端组' )
	and t.C14 IN('白金2组(杨晨2)' ) GROUP BY T.tenantId,T.C23,T.C20,T.C14,T.C11,T.C10,
	SUBSTR(TO_CHAR(T.callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) ORDER BY CALLTIME) k where 1=1 and k.questionsnumber>0
  </select>

  <select id="queryBussinessQualityTable" resultType="java.util.HashMap">
    select ROWNUM id , t.* from(select  substr(TO_CHAR(q.calltime,'yyyy-mm-dd hh24:mi:ss'),0,7) as time,b.area,b.agentGroup,b.BUSSINESSTYPE ,sum(row1) as row1  ,sum(row2) as row2  ,
	 sum(row3) as row3  ,sum(row4) as row4  ,sum(row5) as row5  ,sum(row6) as row6  ,
	 sum(row7) as row7  ,sum(row8) as row8  ,sum(row9) as row9  ,sum(row10) as row10  ,
	 sum(row11) as row11  ,sum(row12) as row12  ,sum(row13) as row13  ,sum(row14) as row14  ,
	 sum(row15) as row15  ,sum(row16) as row16  ,sum(row17) as row17  ,sum(row18) as row18  ,
	 sum(row19) as row19  ,sum(row20) as row20  ,sum(row21) as row21  ,sum(row22) as row22  ,
	 sum(row23) as row23  ,sum(row24) as row24  ,sum(row25) as row25  ,sum(row26) as row26  ,
	 sum(row27) as row27  ,sum(row28) as row28  ,sum(row29) as row29  ,sum(row30) as row30  ,
	 sum(row31) as row31  from
	 (  select   b.tenantid,b.CSID,  b.C20 AS agentGroup,  b.C23 AS area,  case when b.calltime='1' then 1 else 0 end as row1,
	 case when b.calltime='2' then 1 else 0 end as row2,  case when b.calltime='3' then 1 else 0 end as row3,
	 case when b.calltime='4' then 1 else 0 end as row4,  case when b.calltime='5' then 1 else 0 end as row5,
	 case when b.calltime='6' then 1 else 0 end as row6,  case when b.calltime='7' then 1 else 0 end as row7,
	 case when b.calltime='8' then 1 else 0 end as row8,  case when b.calltime='9' then 1 else 0 end as row9,
	 case when b.calltime='10' then 1 else 0 end as row10,  case when b.calltime='11' then 1 else 0 end as row11,
	 case when b.calltime='12' then 1 else 0 end as row12,  case when b.calltime='13' then 1 else 0 end as row13,
	 case when b.calltime='14' then 1 else 0 end as row14,  case when b.calltime='15' then 1 else 0 end as row15,
	 case when b.calltime='16' then 1 else 0 end as row16,  case when b.calltime='17' then 1 else 0 end as row17,
	 case when b.calltime='18' then 1 else 0 end as row18,  case when b.calltime='19' then 1 else 0 end as row19,
	 case when b.calltime='20' then 1 else 0 end as row20,  case when b.calltime='21' then 1 else 0 end as row21,
	 case when b.calltime='22' then 1 else 0 end as row22,  case when b.calltime='23' then 1 else 0 end as row23,
	 case when b.calltime='24' then 1 else 0 end as row24,  case when b.calltime='25' then 1 else 0 end as row25,
	 case when b.calltime='26' then 1 else 0 end as row26,  case when b.calltime='27' then 1 else 0 end as row27,
	 case when b.calltime='28' then 1 else 0 end as row28,  case when b.calltime='29' then 1 else 0 end as row29,
	 case when b.calltime='30' then 1 else 0 end as row30,  case when b.calltime='31' then 1 else 0 end as row31,
	 T.busitype as BUSSINESSTYPE   from (   SELECT b.TENANTID,b.CSID, to_number(to_char(b.calltime,'dd')) as calltime, y.C20,y.C23  FROM
	 QC_CALLSESSIONSTAB b,Y_COBJECTINFOTAB y
	 WHERE b.AGENTID=y.C12      AND b.TENANTID='egoo'  AND y.c23 IN ('西安中心')  AND y.c20 IN ('西安-中端组')  ) b
	 left join
	 v_popupinfo t
	 on b.tenantid=t.TENANTID and b.csid=t.CSID WHERE  1=1   group by   b.tenantid,b.c23,b.c20,b.csid,t.busitype ,b.calltime ) b
	 left join qc_callsessionstab q on b.tenantid=q.tenantid and b.csid=q.csid
	 group by substr(TO_CHAR(q.calltime,'yyyy-mm-dd hh24:mi:ss'),0,7),b.agentGroup,b.area,b.BUSSINESSTYPE  order by substr(TO_CHAR(q.calltime,'yyyy-mm-dd hh24:mi:ss'),0,7),b.agentGroup,b.area,b.BUSSINESSTYPE)t
  </select>

  <select id="queryClientMonitorProblemCompareTable" resultType="java.util.HashMap">
   SELECT
	ROWNUM id,
	k.*
FROM
	(
SELECT
	T.tenantId,
	T.C23,
	T.C20,
	T.C11,
	T.C10,
	T.C14,
       SUBSTR(TO_CHAR(T.callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) AS callTime,
	SUM (
	T.sensitivemuber + T.emotionsnumber  + T.abnormalnumber+ nvl(dd.talktimeouts,0)+ nvl(dd.silenttimeout,0)
	) AS questionsnumber,
	SUM ( T.sensitivemuber ) AS sensitivemuber,
	SUM ( T.emotionsnumber ) AS emotionsnumber,
	SUM ( T.abnormalnumber ) AS abnormalnumber,
	SUM ( T.politeterms ) AS politeterms,
	SUM (nvl( dd.silenttimeout,0) ) AS silenttimeout,
	SUM (nvl( dd.talktimeouts,0) ) AS talktimeouts
FROM
	(
SELECT
	T.tenantid,
	T.csid,
	T.c23,
	T.c20,
	T.c14,
	T.c24,
	T.c11,
	T.c10,
	T.callTime,
	T.callFrom,
	nvl( T.bussinesstype, ' ' ) AS bussinesstype,
	FN_NUMBER2DATE ( T.talkTime ) AS talkTime,
	FN_NUMBER2DATE ( T.silentTime ) AS silentTime,
	( T.sensitivemuber + T.emotionsnumber  + T.abnormalnumber) AS questionsnumber,
	T.sensitivemuber,
	T.emotionsnumber,
	T.abnormalnumber,
	T.remindersensis,
	T.politeterms
FROM
	(
SELECT
	T.tenantid,
	T.csid,
	min( T.c23 ) AS c23,
	min( T.c20 ) AS c20,
	min( T.c14 ) AS c14,
	min( T.c24 ) AS c24,
	min( T.c11 ) AS c11,
	min( T.c10 ) AS c10,
	min( T.callTime ) AS callTime,
	min( T.callFrom ) AS callFrom,
	T.bussinesstype,
	min( T.talkTime ) AS talkTime,
	sum( T.silentTime ) AS silentTime,
	sum( T.sensitivemuber ) AS sensitivemuber,
	sum( T.emotionsnumber ) AS emotionsnumber,
	sum( T.abnormalnumber ) AS abnormalnumber,
	sum( T.remindersensis ) AS remindersensis,
	sum( T.politeterms ) AS politeterms
FROM
	(
SELECT
	v.*,
	cd.C14,
	cd.C11,
	cd.C10,
	cd.C20,
	cd.C23,
	cd.C24,
	nvl( b.POLITETERMS, 0 ) AS POLITETERMS,
	nvl( b.SENSITIVEMUBER, 0 ) AS SENSITIVEMUBER,
	nvl( b.REMINDERSENSIS, 0 ) AS REMINDERSENSIS,
	cp.BUSITYPE AS bussinesstype,
	nvl( c.emotionsnumber, 0 ) AS emotionsnumber,
	nvl( c.abnormalnumber, 0 ) AS abnormalnumber
FROM
	(
SELECT
	cs.tenantid,
	CS.CSID,
	tt.ttid,
	cs.agentId,
	cs.callFrom,
	cs.callTime,
	cs.talkTime,
	tt.silentTime
FROM
	qc_callsessionstab cs
	INNER JOIN
	qc_talktexttab tt
	ON CS.TENANTID = tt.TENANTID
	AND TT.CSID = CS.CSID
WHERE
	tt.ROLENAME = 'AGENT'
 and cs.tenantId='egoo'  	) v
	LEFT JOIN (
SELECT
	tenantid,
	csid,
	ttid,
	sum( politeterms ) AS politeterms,
	sum( sensitivemuber ) AS sensitivemuber,
	sum( remindersensis ) AS remindersensis
FROM
	(
SELECT
	tenantid,
	csid,
	ttid,
	corpusid,
CASE
	WHEN corpustype = 'EVENT_LM_WORDS' THEN
	corpuscount ELSE 0
	END AS politeterms,
CASE
		WHEN corpustype = 'WarningWords' THEN
		corpuscount ELSE 0
	END AS sensitivemuber,
CASE
		WHEN corpustype = 'WarningWords'
		AND corpuscount > 0 THEN
			corpuscount - 1 ELSE 0
		END AS remindersensis
	FROM
		qc_talktextchecktab
		where  corpustype = 'WarningWords'
	)
GROUP BY
	tenantid,
	csid,
	ttid
	) b ON v.tenantid = b.tenantid
	AND v.CSID = b.CSID
	AND v.TTID = b.TTID
	LEFT JOIN (
	SELECT
		b.TENANTID,
		b.CSID,
		b.BUSITYPE
	FROM
		(
		SELECT
			row_number () over ( partition BY s.csid ORDER BY s.POPUPCREATETIME ASC ) rn,
			s.TENANTID,
			s.CSID,
			s.BUSITYPE
		FROM
			QC_POPUPINFO s
		WHERE
			s.POPUPTYPE = 'JnWords'
			AND s.TTROLE = 'AGENT'
		) b
	WHERE
		b.RN = 1
	) cp ON v.tenantid = CP.TENANTID
	AND cp.csid = v.csid
	LEFT JOIN (
	SELECT
		c.tenantid,
		c.csid,
		c.TTID,
		SUM ( emotionsnumber ) AS emotionsnumber,
		SUM ( abnormalnumber ) AS abnormalnumber
	FROM
		(
		SELECT
			c.tenantid,
			c.csid,
			c.TTID,
		CASE
				WHEN c.attrtype = 'EVENT_EMOTION_UNUSUAL'
				AND c.attrval >= c.THROSVAL THEN
					1 ELSE 0
				END AS emotionsnumber,
			CASE
					WHEN c.attrtype = 'SpeedUnusual'
					AND c.attrval >= c.THROSVAL THEN
						1 ELSE 0
					END AS abnormalnumber
						FROM
							qc_talkattrchecktab c
						) c
					GROUP BY
						c.tenantid,
						c.csid,
						c.TTID
					) c ON c.tenantid = v.tenantid
					AND c.csid = v.csid
					AND c.TTID = v.TTID
					INNER JOIN
					Y_CObjectInfoTab cd
					ON cd.C12 = v.agentId
					AND cd.tenantid = v.tenantid
				) T
			GROUP BY
				T.tenantid,
				T.csid,
				T.bussinesstype
			) T
		ORDER BY
			t.callTime
		) T
		Left JOIN (
SELECT
	c.tenantid,
	c.csid,
	SUM( talktimeouts ) AS talktimeouts,
	SUM( silenttimeout ) AS silenttimeout
FROM
	(
SELECT
	c.tenantid,
	c.csid,
CASE
	WHEN c.attrtype = 'TalkTimeout'
	AND c.ttid = '0'
	AND c.attrval >= c.throsval THEN
	1 ELSE 0
END AS talktimeouts,
				CASE
						WHEN c.attrtype = 'SilentTimeout'
						AND c.attrval >= c.THROSVAL THEN
							1 ELSE 0
						END AS silenttimeout
FROM
	qc_talkattrchecktab c
	) c
GROUP BY
	c.tenantid,
	c.csid )
		dd ON dd.csid = t.csid
		AND dd.tenantid = t.tenantid
	WHERE  1=1 and t.C23 IN('西安中心' )  and t.C20 IN('西安-中端组' )  and t.C14 IN('白金2组(杨晨2)' ) GROUP BY T.tenantId,T.C23,T.C20,T.C14,T.C11,T.C10,SUBSTR(TO_CHAR(T.callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) ORDER BY CALLTIME) k where 1=1 and k.questionsnumber>0
	</select>

  <select id="queryGroupMonitorProblemCompareTable" resultType="java.util.HashMap">
   SELECT
    rownum id,
	k.*
FROM
	(
SELECT
	T.C20,
	T.C23,
	T.C14,
       SUBSTR(TO_CHAR(T.callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) AS callTime,
	SUM((
	T.sensitivemuber + T.emotionsnumber + nvl(dd.silenttimeout,0) + T.abnormalnumber+nvl(dd.talktimeouts,0)
	)) AS questionsnumber,
	SUM( T.sensitivemuber ) AS sensitivemuber,
	SUM( T.emotionsnumber ) AS emotionsnumber,
	SUM( T.abnormalnumber ) AS abnormalnumber,
	SUM(nvl( dd.silenttimeout,0) ) AS silenttimeout,
	SUM(nvl( dd.talktimeouts,0) ) AS talktimeouts
FROM
	(
SELECT
	T.tenantid,
	T.csid,
	T.c23,
	T.c20,
	T.c14,
	T.c24,
	T.c11,
	T.c10,
	T.callTime,
	T.callFrom,
	nvl( T.bussinesstype, ' ' ) AS bussinesstype,
	FN_NUMBER2DATE ( T.talkTime ) AS talkTime,
	FN_NUMBER2DATE ( T.silentTime ) AS silentTime,
	( T.sensitivemuber + T.emotionsnumber +  T.abnormalnumber) AS questionsnumber,
	T.sensitivemuber,
	T.emotionsnumber,
	T.abnormalnumber,
	T.remindersensis
FROM
	(
SELECT
	T.tenantid,
	T.csid,
	min( T.c23 ) AS c23,
	min( T.c20 ) AS c20,
	min( T.c14 ) AS c14,
	min( T.c24 ) AS c24,
	min( T.c11 ) AS c11,
	min( T.c10 ) AS c10,
	min( T.callTime ) AS callTime,
	min( T.callFrom ) AS callFrom,
	T.bussinesstype,
	min( T.talkTime ) AS talkTime,
	sum( T.silentTime ) AS silentTime,
	sum( T.sensitivemuber ) AS sensitivemuber,
	sum( T.emotionsnumber ) AS emotionsnumber,
	sum( T.abnormalnumber ) AS abnormalnumber,
	sum( T.remindersensis ) AS remindersensis
FROM
	(
SELECT
	v.*,
	cd.C14,
	cd.C11,
	cd.C10,
	cd.C20,
	cd.C23,
	cd.C24,
	nvl( b.SENSITIVEMUBER, 0 ) AS SENSITIVEMUBER,
	nvl( b.REMINDERSENSIS, 0 ) AS REMINDERSENSIS,
	cp.BUSITYPE AS bussinesstype,
	nvl( c.emotionsnumber, 0 ) AS emotionsnumber,
	nvl( c.abnormalnumber, 0 ) AS abnormalnumber
FROM
	(
SELECT
	cs.tenantid,
	CS.CSID,
	tt.ttid,
	cs.agentId,
	cs.callFrom,
	cs.callTime,
	cs.talkTime,
	tt.silentTime
FROM
	qc_callsessionstab cs
	INNER JOIN
	qc_talktexttab tt
	ON CS.TENANTID = tt.TENANTID
	AND TT.CSID = CS.CSID
WHERE
	tt.ROLENAME = 'AGENT'
and cs.tenantId='egoo'   	) v
	LEFT JOIN (
SELECT
	tenantid,
	csid,
	ttid,
	sum( sensitivemuber ) AS sensitivemuber,
	sum( remindersensis ) AS remindersensis
FROM
	(
SELECT
	tenantid,
	csid,
	ttid,
	corpusid,
CASE
		WHEN corpustype = 'WarningWords' THEN
		corpuscount ELSE 0
	END AS sensitivemuber,
CASE
		WHEN corpustype = 'WarningWords'
		AND corpuscount > 0 THEN
			corpuscount - 1 ELSE 0
		END AS remindersensis
	FROM
		qc_talktextchecktab
		where  corpustype = 'WarningWords'
	)
GROUP BY
	tenantid,
	csid,
	ttid
	) b ON v.tenantid = b.tenantid
	AND v.CSID = b.CSID
	AND v.TTID = b.TTID
	LEFT JOIN (
	SELECT
		b.TENANTID,
		b.CSID,
		b.BUSITYPE
	FROM
		(
		SELECT
			row_number () over ( partition BY s.csid ORDER BY s.POPUPCREATETIME ASC ) rn,
			s.TENANTID,
			s.CSID,
			s.BUSITYPE
		FROM
			QC_POPUPINFO s
		WHERE
			s.POPUPTYPE = 'JnWords'
			AND s.TTROLE = 'AGENT'
		) b
	WHERE
		b.RN = 1
	) cp ON v.tenantid = CP.TENANTID
	AND cp.csid = v.csid
	LEFT JOIN (
	SELECT
		c.tenantid,
		c.csid,
		c.TTID,
		SUM ( emotionsnumber ) AS emotionsnumber,
		SUM ( abnormalnumber ) AS abnormalnumber
	FROM
		(
		SELECT
			c.tenantid,
			c.csid,
			c.TTID,
		CASE
				WHEN c.attrtype = 'EVENT_EMOTION_UNUSUAL'
				AND c.attrval >= c.THROSVAL THEN
					1 ELSE 0
				END AS emotionsnumber,
			CASE
					WHEN c.attrtype = 'SpeedUnusual'
					AND c.attrval >= c.THROSVAL THEN
						1 ELSE 0
					END AS abnormalnumber
						FROM
							qc_talkattrchecktab c
						) c
					GROUP BY
						c.tenantid,
						c.csid,
						c.TTID
					) c ON c.tenantid = v.tenantid
					AND c.csid = v.csid
					AND c.TTID = v.TTID
					INNER JOIN
					Y_CObjectInfoTab cd
					ON cd.C12 = v.agentId
					AND cd.tenantid = v.tenantid
				) T
			GROUP BY
				T.tenantid,
				T.csid,
				T.bussinesstype
			) T
		ORDER BY
			t.callTime
		) T LEFT JOIN (
	SELECT
	td.AGENTID,
	cd.tenantid,
	cd.csid,
	cd.talktimeouts as talktimeouts ,
	cd.silenttimeout as silenttimeout
	from(
SELECT
	c.tenantid,
	c.csid,
	SUM( talktimeouts ) AS talktimeouts ,
	SUM( silenttimeout ) AS silenttimeout
FROM
	(
SELECT
	c.tenantid,
	c.csid,
CASE
	WHEN c.attrtype = 'TalkTimeout'
	AND c.ttid = '0'
	AND c.attrval >= c.throsval THEN
	1 ELSE 0
END AS talktimeouts ,
CASE
	WHEN c.attrtype = 'SilentTimeout'
	AND c.attrval >= c.THROSVAL THEN
	1 ELSE 0
	END AS silenttimeout
FROM
	qc_talkattrchecktab c
	) c
GROUP BY
	c.tenantid,
	c.csid
	) cd
left JOIN
	QC_CALLSESSIONSTAB td
	ON td.csid = cd.csid
		)
		dd ON dd.csid = t.csid
		AND dd.tenantid = t.tenantid
	WHERE
		1 = 1   and t.C23 IN('西安中心' )  and t.C20 IN('西安-中端组' )  and t.C14 IN('白金2组(杨晨2)' )  GROUP BY T.tenantId,SUBSTR(TO_CHAR
		(T.callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7),T.C23,T.C20,T.C14 ORDER BY CALLTIME)k where k.questionsnumber  >0
  </select>

  <select id="queryClientSkillMatchTable" resultType="java.util.HashMap">
    select rownum id,t.* from (SELECT SUBSTR(TO_CHAR(B.POPUPCREATETIME,'yyyy-mm-dd hh24:mi:ss'),0,7) as time,b.AGENTID,b.AGENTNAME,c.area,c.groupName,c.smallGroup,sum(JNWORDS) AS JNWORDS, sum(SPEEDUNUSUAL) as SPEEDUNUSUAL from (
  		SELECT AGENTID,AGENTNAME,POPUPCREATETIME, CASE WHEN POPUPTYPE='JnWords' and TARGETTYPE='Agent' and TTROLE='USER' THEN 1 ELSE 0 END AS  JNWORDS,
  		CASE WHEN POPUPTYPE='EmotionUnusual' and TARGETTYPE='Agent' THEN 1 ELSE 0 END AS  SPEEDUNUSUAL  FROM QC_POPUPINFO  WHERE
  		POPUPTYPE IN ('JnWords','EmotionUnusual')  AND TENANTID='egoo'   ) b, ( SELECT C23 as area,C20 as groupName,c14 as smallGroup,c12 AS agentid
  	FROM
  		Y_COBJECTINFOTAB WHERE  TENANTID='egoo'  AND C23
  			IN ('西安中心')  AND C20 IN ('西安-中端组')  AND C14 IN ('白金2组(杨晨2)')  ) c   WHERE b.AGENTID=c.agentid
  		GROUP BY SUBSTR(TO_CHAR(B.POPUPCREATETIME,'yyyy-mm-dd hh24:mi:ss'),0,7),c.area,c.groupName,
  		c.smallGroup,b.AGENTNAME,b.AGENTID
	ORDER BY c.area,c.groupName,c.smallGroup,b.AGENTID) t
  </select>


   <select id="queryGroupLeaderMonitorTable" resultType="java.util.HashMap">
     select rownum id,t.* from (SELECT K.*, ROWNUM RN FROM (SELECT tenantId,C23,C20,c14,c16,c15,
       SUBSTR(TO_CHAR(callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) AS callTime,
       SUM( gross ) AS gross,
       SUM( onlinethroughput ) AS onlinethroughput,
       SUM( Historithroughput ) AS Historithroughput,
       SUM( inhand ) AS inhand,
       SUM( noprocessing ) AS noprocessing,
       SUM( overtimenothandled ) AS overtimenothandled
       FROM
       (
       SELECT
       a.*,
       CB.C23,
       CB.C20,
       CB.C14,
       CB.C15,
       CB.C16,
       CB.C11,
       CB.C10
       FROM
       (
       SELECT
       DISTINCT
       a.TENANTID,
       a.CSID,
       a.CALLTIME,
       a.AGENTID,
       CASE
       WHEN a.POPUPTYPE = 'EmotionUnusual'
       OR a.POPUPTYPE = 'WarningWords' 	OR a.POPUPTYPE = 'SilentTimeout' 	OR a.POPUPTYPE = 'TalkTimeout' THEN
       1 ELSE 0
       END gross,
       CASE
       WHEN a.LASTCHANGETIME &lt; a.LIMITTIME
                               AND ( a.processStatus = 2 OR a.processStatus = 3 ) THEN
       1 ELSE 0
       END onlinethroughput,
       CASE
       WHEN a.LASTCHANGETIME > a.LIMITTIME
       AND ( a.processStatus = 2 OR a.processStatus = 3 )
       AND to_char( a.lastChangeTime, 'yyyy-MM-dd' ) = to_char( a.limittime, 'yyyy-MM-dd' ) THEN
       1 ELSE 0
       END Historithroughput,
       CASE
       WHEN a.processStatus = 1
       AND to_char( a.lastChangeTime, 'yyyy-MM-dd' ) = to_char( a.limittime, 'yyyy-MM-dd' )
       AND	(to_date( to_char( a.limittime, 'yyyy-MM-dd' ), 'yyyy-MM-dd' )=to_date( to_char( SYSDATE, 'yyyy-MM-dd' ), 'yyyy-MM-dd' ))
       THEN			1 ELSE 0
       END inhand,
       CASE
       WHEN a.processStatus = 0
       AND a.lastChangeTime &lt; to_date( to_char( a.limittime, 'yyyy-MM-dd' ), 'yyyy-MM-dd' ) + 1
       AND	(to_date( to_char( a.limittime, 'yyyy-MM-dd' ), 'yyyy-MM-dd' )=to_date( to_char( SYSDATE, 'yyyy-MM-dd' ), 'yyyy-MM-dd' ))
       THEN
       1 ELSE 0
       END noprocessing,
       CASE
       WHEN a.lastChangeTime >= to_date( to_char( a.limittime, 'yyyy-MM-dd' ), 'yyyy-MM-dd' ) + 1
       OR (SYSDATE > to_date( to_char( a.limittime, 'yyyy-MM-dd' ), 'yyyy-MM-dd' ) + 1 AND
       (a.processStatus = 0 OR a.processStatus = 1) ) THEN
       1 ELSE 0
       END overtimenothandled
       FROM
       (
       SELECT
       a.*,
       b.POPUPTYPE
       FROM
       QC_CALLSESSIONSTAB a
       INNER JOIN (
       SELECT
       TENANTID,
       CSID,
       POPUPTYPE
       FROM
       QC_POPUPINFO
       WHERE
       POPUPTYPE = 'EmotionUnusual'
       OR POPUPTYPE = 'WarningWords'			OR POPUPTYPE = 'SilentTimeout'
       OR POPUPTYPE = 'TalkTimeout'
       AND TTROLE IS NOT NULL
       ) b ON a.TENANTID = b.TENANTID
       AND a.CSID = b.CSID
       ORDER BY
       a.CSID
       ) a
       ) a
       INNER JOIN
       Y_COBJECTINFOTAB cb
       ON a.TENANTID = cb.TENANTID
       AND a.AGENTID = cb.C12
       ) where tenantId='egoo'    and
       C23 IN('西安中心' )  and C20 IN('西安-中端组' )  and C14 IN('白金2组(杨晨2)' ) GROUP BY tenantId,C23,C20,c14,c16,c15,
       SUBSTR(TO_CHAR(callTime,'yyyy-mm-dd hh24:mi:ss'), 0, 7) order by calltime,c20) K WHERE 1=1)t
   </select>

    <select id="queryBussinessHandleDetailTable" resultType="java.util.HashMap">
      SELECT rownum id,tenantId,C23,C20,c14,c16,c11,c15,callTime,callfrom,
        NVL(bussinesstype, ' ') AS bussinesstype,PROCESSSTATUS FROM
        (SELECT f.tenantId,f.CSID,CB.C23,CB.C20,CB.C11,CB.C10,CB.C14,CB.C16,CB.C15,
        f.bussinesstype,f.callTime,f.callfrom,f.PROCESSSTATUS FROM
        (SELECT q.*,b.BUSITYPE AS bussinesstype FROM  (select c.* from
         QC_CALLSESSIONSTAB c
         inner join  (select distinct tenantid,csid
         from
         qc_popupinfo
         where popuptype in ('EmotionUnusual','SilentTimeout','TalkTimeout','WarningWords') ) a  on a.tenantid = c.tenantid
         and c.csid = a.csid ) q
         LEFT JOIN (SELECT b.TENANTID,b.CSID,b.BUSITYPE FROM
        (SELECT row_number()over(partition by s.csid order by s.POPUPCREATETIME ASC) rn,s.TENANTID,s.CSID,s.BUSITYPE
        from
        QC_POPUPINFO s
        WHERE s.POPUPTYPE='JnWords' AND s.TTROLE IS NOT NULL)b
        where b.RN=1)b
        ON b.tenantId=q.tenantId AND q.CSID=b.CSID  ORDER BY q.callTime)f
        INNER JOIN
        Y_COBJECTINFOTAB cb
        ON cb.tenantId=f.tenantId AND cb.C12=f.agentId) where tenantId='egoo'   and C23 IN('西安中心' )  and C20 IN('西安-中端组' )  and C14 IN('白金2组(杨晨2)' )
        ORDER BY CALLTIME
    </select>


    <select id="queryBussinessPopStatisticTable" resultType="java.util.HashMap">
		SELECT
			rownum id,
			K.*
		FROM
			(
		SELECT
			tenantId,
			c23,
			POPUPCREATETIME,
			BUSITYPE AS BUSITYPE,
			FN_NUMBER2DATE (
			sum( TALKTIME )) AS TALKTIME,
			SUM( AGENTSLIENTTIMEOUT )+SUM( CUSTOMERSLIENTTIMEOUT)+sum( SENSITIVEMUBER )+sum( ABNORMALNUMBER )+sum( EMOTIONSNUMBER )+SUM(TALKTIMEOUT )+SUM( ANGENTJNWORDS )+sum( USERSENSITIVEMUBER )+sum( CUSTOMEREMOTIONS ) AS SCREENNUMBER,
			sum( USERSENSITIVEMUBER )+sum( CUSTOMEREMOTIONS ) AS customersscreen,
			SUM( AGENTSLIENTTIMEOUT )+SUM( CUSTOMERSLIENTTIMEOUT)+sum( SENSITIVEMUBER )+sum( ABNORMALNUMBER )+sum( EMOTIONSNUMBER )+SUM(TALKTIMEOUT )+SUM( ANGENTJNWORDS ) AS positionscreen,
			sum( SENSITIVEMUBER ) AS SENSITIVEMUBER,
			sum( ABNORMALNUMBER ) AS ABNORMALNUMBER,
			sum( EMOTIONSNUMBER ) AS EMOTIONSNUMBER,
			sum( USERSENSITIVEMUBER ) AS USERSENSITIVEMUBER,
			sum( CFKE ) AS CFKE,
			sum( CFZX ) AS CFZX,
			sum( callnumber ) AS callnumber,
			SUM( TALKTIMEOUT ) AS TALKTIMEOUT,
			SUM( ANGENTJNWORDS ) AS ANGENTJNWORDS,
			SUM( AGENTSLIENTTIMEOUT )+SUM( CUSTOMERSLIENTTIMEOUT) AS AGENTSLIENTTIMEOUT,
			SUM( CUSTOMERSENSITIVE ) AS CUSTOMERSENSITIVE,
			SUM( CUSTOMEREMOTIONS ) AS CUSTOMEREMOTIONS,
			SUM( CUSTOMERSLIENTTIMEOUT ) AS CUSTOMERSLIENTTIMEOUT
		FROM
			(
			SELECT
				b.tenantId AS tenantId,
				b.c23,
				b.CSID,
				b.CALLFROM,
				b.CALLTIME,
				b.POPUPCREATETIME,
				n.BUSITYPE AS BUSITYPE,
				b.TALKTIME,
				b.customersscreen AS customersscreen,
				b.positionscreen AS positionscreen,
				b.SENSITIVEMUBER,
				b.ABNORMALNUMBER,
				b.EMOTIONSNUMBER,
				b.USERSENSITIVEMUBER,
				b.TALKTIMEOUT,
				b.ANGENTJNWORDS,
				b.AGENTSLIENTTIMEOUT,
				b.CUSTOMERSENSITIVE,
				b.CUSTOMEREMOTIONS,
				b.CUSTOMERSLIENTTIMEOUT,
				b.CFKE,
				b.CFZX,
				NVL(callnumber, 0 ) AS callnumber
			FROM
				(
					select tenantid,                    csid,
					c23,                        callfrom,
					CALLTIME,                        popupCreateTime,
					busiType,                        max(TALKTIME) as TALKTIME ,
					SUM( sensitivemuber ) AS sensitivemuber,
					SUM( abnormalnumber ) AS abnormalnumber,
					SUM( emotionsnumber ) AS emotionsnumber,
					SUM( usersensitivemuber ) AS usersensitivemuber,
					SUM( customersscreen ) AS customersscreen,
					SUM( positionscreen ) AS positionscreen,
					SUM( TALKTIMEOUT ) AS TALKTIMEOUT,
					SUM( ANGENTJNWORDS ) AS ANGENTJNWORDS,
					SUM( AGENTSLIENTTIMEOUT ) AS AGENTSLIENTTIMEOUT,
					SUM( CUSTOMERSENSITIVE ) AS CUSTOMERSENSITIVE,
					SUM( CUSTOMEREMOTIONS ) AS CUSTOMEREMOTIONS,
					SUM( CUSTOMERSLIENTTIMEOUT ) AS CUSTOMERSLIENTTIMEOUT,
					max(callnumber)	AS callnumber,
					SUM(cfke)  AS cfke,
					SUM(cfzx)	AS cfzx
					 from  (
					 SELECT
						f.tenantId,
						MAX(CSID)AS csid,
						MAX(c23)AS c23,
						f.callfrom,
						f.CALLTIME,
						f.popupCreateTime,
						f.busiType,
						f.c10,
						f.TTROLE,
						max( f.TALKTIME ) AS TALKTIME,
						SUM( f.sensitivemuber ) AS sensitivemuber,
						SUM( f.abnormalnumber ) AS abnormalnumber,
						SUM( f.emotionsnumber ) AS emotionsnumber,
						SUM( f.usersensitivemuber ) AS usersensitivemuber,
						SUM( f.customersscreen ) AS customersscreen,
						SUM( f.positionscreen ) AS positionscreen,
						SUM( f.TALKTIMEOUT ) AS TALKTIMEOUT,
						SUM( f.ANGENTJNWORDS ) AS ANGENTJNWORDS,
						SUM( f.AGENTSLIENTTIMEOUT ) AS AGENTSLIENTTIMEOUT,
						SUM( f.CUSTOMERSENSITIVE ) AS CUSTOMERSENSITIVE,
						SUM( f.CUSTOMEREMOTIONS ) AS CUSTOMEREMOTIONS,
						SUM( f.CUSTOMERSLIENTTIMEOUT ) AS CUSTOMERSLIENTTIMEOUT,
						sum (callnumber)	AS callnumber,
						CASE WHEN f.TTROLE = 'USER' 	AND SUM( f.usersensitivemuber ) > 0 AND f.C10 IS NOT NULL 	AND
						COUNT( f.C10 ) > 0 THEN	count( f.C10 ) - 1 ELSE 0 	END AS cfke,
						CASE WHEN f.TTROLE = 'AGENT' AND SUM( f.sensitivemuber ) > 0 AND f.C10 IS
						NOT NULL AND COUNT( f.C10 ) > 0 THEN count( f.C10 ) - 1 ELSE 0 	       END AS cfzx
					FROM
						(
						SELECT b.tenantId,b.c23,b.csid,b.BUSITYPE,b.CALLFROM,b.POPUPCREATETIME,b.TALKTIME,
								b.ttid,nvl(callnumber,0) callnumber,
								CASE WHEN b.TTROLE='USER' THEN 1 ELSE 0 END AS customersscreen,
								CASE WHEN b.TTROLE='AGENT' THEN 1 ELSE 0 END AS positionscreen,
								CASE WHEN b.TTROLE='AGENT' AND b.POPUPTYPE='WarningWords' THEN 1 ELSE 0 END sensitivemuber,
								CASE WHEN b.TTROLE='AGENT' AND b.POPUPTYPE='SpeedUnusual' THEN 1 ELSE 0 END abnormalnumber,
								CASE WHEN b.TTROLE='AGENT' AND b.POPUPTYPE='EmotionUnusual' THEN 1 ELSE 0 END emotionsnumber,
								CASE WHEN b.TTROLE='USER' AND b.POPUPTYPE='WarningWords' THEN 1 ELSE 0 END usersensitivemuber,
								CASE WHEN b.POPUPTYPE='TalkTimeout' THEN 1 ELSE 0 END TALKTIMEOUT,
								CASE WHEN (b.POPUPTYPE='JnWords' AND b.TTROLE='USER') THEN 1 ELSE 0 END ANGENTJNWORDS,
								CASE WHEN b.TTROLE='AGENT' AND b.POPUPTYPE='SilentTimeout' THEN 1 ELSE 0 END AGENTSLIENTTIMEOUT,
								CASE WHEN b.TTROLE='USER' AND b.POPUPTYPE='WarningWords' THEN 1 ELSE 0 END CUSTOMERSENSITIVE,
								CASE WHEN b.TTROLE='USER' AND b.POPUPTYPE='EmotionUnusual' THEN 1 ELSE 0 END CUSTOMEREMOTIONS,
								CASE WHEN b.TTROLE='USER' AND b.POPUPTYPE='SilentTimeout' THEN 1 ELSE 0 END CUSTOMERSLIENTTIMEOUT,
								b.C10,b.TTROLE,b.CALLTIME FROM
								(SELECT DISTINCT yc.c23, cp.tenantId,cp.csid,cn.callFrom,SUBSTR( TO_CHAR( POPUPCREATETIME, 'yyyy-mm-dd hh24:mi:ss' ), 0, 7 ) popupCreateTime,
								cp.ttid,cn.talkTime,cp.popupType,cp.busiType,cp.
								C10,CN.CALLTIME,CP.TTROLE FROM QC_POPUPINFO cp
										INNER JOIN
										QC_CALLSESSIONSTAB cn
										ON cp.csId=cn.csId AND cp.tenantId=cn.tenantId
										  INNER JOIN
										  y_cobjectinfotab  yc
										  on cn.tenantid =yc.tenantid and cn.agentid =yc.c12
									   where cp.tenantId='egoo'                          )b
							 LEFT JOIN (SELECT CASE WHEN COUNT(1)>0  THEN 1 ELSE 0 END AS callnumber,
							 v.tenantId,v.CSID,v.callFrom,v.CALLTIME,v.C10,MIN(popupCreateTime) AS popupCreateTime,v.ttid FROM
								(SELECT row_number()over(partition by s.csid order by s.POPUPCREATETIME ASC) rn,
								s.TENANTID,s.CSID,s.CALLFROM,s.CALLTIME,s.C10,s.POPUPCREATETIME,s.ttid from (
								SELECT cp.tenantId,cp.csid,cn.callFrom,cp.popupCreateTime,cp.C10,CN.CALLTIME,cp.ttid
											FROM
											QC_CALLSESSIONSTAB cn
											INNER JOIN
											QC_POPUPINFO cp
											ON cp.csId=cn.csId AND cp.tenantId=cn.tenantId)s )v WHERE v.rn=1 GROUP BY
											v.tenantId,v.CSID,v.callFrom,v.CALLTIME,v.C10,v.ttid ORDER BY v.CSID,popupCreateTime)v
											ON v.CSID=b.CSID AND v.tenantId=b.tenantId
											AND v.CALLTIME=b.CALLTIME AND v.CALLFROM=b.CALLFROM  and v.ttid=b.ttid  WHERE b.TTROLE IS NOT NULL
							  )f   GROUP BY
										f.tenantId,
										f.callfrom,
										f.CALLTIME,
										f.popupCreateTime,
										f.busiType,
										f.TTROLE,
										f.c10
										ORDER BY CSID,POPUPCREATETIME ) a
		  group by tenantId,csid,c23,callfrom,CALLTIME,popupCreateTime,busiType          ) b
			  LEFT JOIN (
						SELECT  b.TENANTID,b.CSID,	b.BUSITYPE
									FROM	(	SELECT	row_number () over ( partition BY s.csid ORDER BY s.POPUPCREATETIME ASC ) rn,	s.TENANTID,s.CSID,
									s.BUSITYPE 	FROM
									QC_POPUPINFO s
									WHERE	s.POPUPTYPE = 'JnWords'        ) b
						  WHERE	b.RN = 1
			  ) n ON n.CSID = b.CSID 	AND n.tenantId = b.tenantId
		  )where 1=1  and C23 IN('西安中心' )  GROUP BY tenantId,c23,POPUPCREATETIME,BUSITYPE ORDER BY POPUPCREATETIME) K WHERE 1=1
    </select>
</mapper>